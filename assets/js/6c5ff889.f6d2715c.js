"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[80809],{14089:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>m,contentTitle:()=>f,default:()=>g,frontMatter:()=>u,metadata:()=>x,toc:()=>j});var a=l(85893),t=l(11151),i=l(74866),o=l(85162);function r(e){const n={code:"code",pre:"pre",...(0,t.a)(),...e.components};return(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifemBase\n  implicit none\n  integer(i4b) :: order\n  real(dfp), parameter :: tol = 1.0E-10\n  real(dfp), allocatable :: x(:), coeff(:,:), ans(:), xij(:,:)\n  character( len = * ), parameter :: layout="VEFC" \n  integer(i4b) :: ipType\n  !! "INCREASING"\n  x = [0,1]\n  order = 4_I4B\n  iptype = Equidistance\n  xij = reshape(InterpolationPoint_Line(order=order, iptype=iptype, layout=layout, xij=x), [1, order+1])\n  call display(xij, "xij: ")\n  coeff = zeros(order+1, order+1, 1.0_DFP)\n\n  ans = LagrangeEvalAll_Line(order, xij(1,1), xij, coeff, firstCall=.true.)\n  call ok(ans(1) .approxeq. 1.0_DFP, "tests(1):")\n  call ok(all(ans(2:) .approxeq. 0.0_DFP), "tests(2):")\n\n  ans = LagrangeEvalAll_Line(order, xij(1,2),  xij, coeff, firstCall=.false.)\n  call ok(softeq( ans(1), 0.0_DFP, tol), "tests(3):")\n  call ok(softeq( ans(2), 1.0_DFP, tol), "tests(4):")\n\n  ans = LagrangeEvalAll_Line(order, xij(1,3),  xij, coeff, firstCall=.false.)\n  call ok(all(softeq( ans(1:2), 0.0_DFP, tol)), "tests(5):")\n  call ok(softeq( ans(3), 1.0_DFP, tol), "tests(6):")\n\n  ans = LagrangeEvalAll_Line(order, xij(1,4),  xij, coeff, firstCall=.false.)\n  call ok(all(softeq( ans(1:3), 0.0_DFP, tol)), "tests(7):")\n  call ok(softeq( ans(4), 1.0_DFP, tol), "tests(8):")\nend program main\n'})})}function s(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(r,{...e})}):r(e)}function c(e){const n={code:"code",pre:"pre",...(0,t.a)(),...e.components};return(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifemBase\n  implicit none\n  integer(i4b) :: order\n  real(dfp), parameter :: tol = 1.0E-10\n  real(dfp), allocatable :: x(:), coeff(:,:), ans(:), xij(:,:)\n  character( len = * ), parameter :: layout="VEFC" \n  integer(i4b) :: ipType\n  !! "INCREASING"\n  x = [0,1]\n  order = 4_I4B\n  iptype = GaussLegendreLobatto\n  xij = reshape(InterpolationPoint_Line(order=order, iptype=iptype, layout=layout, xij=x), [1, order+1])\n  call display(xij, "xij: ")\n  coeff = zeros(order+1, order+1, 1.0_DFP)\n\n  ans = LagrangeEvalAll_Line(order, xij(1,1), xij, coeff, firstCall=.true.)\n  call ok(ans(1) .approxeq. 1.0_DFP, "tests(1):")\n  call ok(all(ans(2:) .approxeq. 0.0_DFP), "tests(2):")\n\n  ans = LagrangeEvalAll_Line(order, xij(1,2),  xij, coeff, firstCall=.false.)\n  call ok(softeq( ans(1), 0.0_DFP, tol), "tests(3):")\n  call ok(softeq( ans(2), 1.0_DFP, tol), "tests(4):")\n\n  ans = LagrangeEvalAll_Line(order, xij(1,3),  xij, coeff, firstCall=.false.)\n  call ok(all(softeq( ans(1:2), 0.0_DFP, tol)), "tests(5):")\n  call ok(softeq( ans(3), 1.0_DFP, tol), "tests(6):")\n\n  ans = LagrangeEvalAll_Line(order, xij(1,4),  xij, coeff, firstCall=.false.)\n  call ok(all(softeq( ans(1:3), 0.0_DFP, tol)), "tests(7):")\n  call ok(softeq( ans(4), 1.0_DFP, tol), "tests(8):")\n\nend program main\n'})})}function d(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}function p(e){const n={code:"code",pre:"pre",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:'program main\n  use easifemBase\n  implicit none\n  integer(i4b) :: order\n  real(dfp), parameter :: tol = 1.0E-10\n  real(dfp), allocatable :: x(:), coeff(:,:), ans(:,:), xij(:,:)\n  character( len = * ), parameter :: layout="VEFC" \n  integer(i4b) :: ipType\n  !! "INCREASING"\n  x = [0,1]\n  order = 4_I4B\n  iptype = GaussLegendreLobatto\n  xij = reshape(InterpolationPoint_Line(order=order, iptype=iptype, layout=layout, xij=x), [1, order+1])\n  call display(xij, "xij: ")\n  coeff = zeros(order+1, order+1, 1.0_DFP)\n\n  ans = LagrangeEvalAll_Line(order, xij(1,:), xij, coeff, firstCall=.true.)\n  call ok(all(softeq(ans, eye(order+1, 1.0_DFP), tol ) ), "tests(1):")\n\nend program main\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-txt",metastring:'title="results"',children:" 1.00000   0.00000  -0.00000   0.00000  -0.00000\n 0.00000   1.00000   0.00000  -0.00000   0.00000\n 0.00000   0.00000   1.00000   0.00000  -0.00000\n 0.00000   0.00000  -0.00000   1.00000  -0.00000\n 0.00000  -0.00000   0.00000  -0.00000   1.00000\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}const u={sidebar_label:"LagrangeEvalAll"},f="LagrangeEvalAll_Line",x={id:"LineInterpolationUtility/LagrangeEvalAll_Line",title:"LagrangeEvalAll_Line",description:"Evaluate Lagrangepolynomials at single point or several points.",source:"@site/docs/docs-api/LineInterpolationUtility/LagrangeEvalAll_Line.md",sourceDirName:"LineInterpolationUtility",slug:"/LineInterpolationUtility/LagrangeEvalAll_Line",permalink:"/docs-api/LineInterpolationUtility/LagrangeEvalAll_Line",draft:!1,unlisted:!1,editUrl:"https://github.com/easifem-fortran/easifem-fortran.github.io/tree/main/docs/docs-api/LineInterpolationUtility/LagrangeEvalAll_Line.md",tags:[],version:"current",lastUpdatedAt:1701057211,formattedLastUpdatedAt:"Nov 27, 2023",frontMatter:{sidebar_label:"LagrangeEvalAll"},sidebar:"tutorialSidebar",previous:{title:"LagrangeDegree",permalink:"/docs-api/LineInterpolationUtility/LagrangeDegree_Line"},next:{title:"LagrangeInDOF",permalink:"/docs-api/LineInterpolationUtility/LagrangeInDOF_Line"}},m={},j=[{value:"Interface 1",id:"interface-1",level:2},{value:"Interface 2",id:"interface-2",level:2}];function b(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",input:"input",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"lagrangeevalall_line",children:"LagrangeEvalAll_Line"}),"\n",(0,a.jsx)(n.p,{children:"Evaluate Lagrangepolynomials at single point or several points."}),"\n",(0,a.jsx)(n.h2,{id:"interface-1",children:"Interface 1"}),"\n","\n","\n",(0,a.jsxs)(i.Z,{children:[(0,a.jsxs)(o.Z,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE LagrangeEvalAll_Line\n  MODULE FUNCTION LagrangeEvalAll_Line1(order, x, xij, coeff, firstCall, &\n    & orthopol, alpha, beta, lambda) &\n    & RESULT(ans)\n    INTEGER(I4B), INTENT(IN) :: order\n    !! order of Lagrange polynomials\n    REAL(DFP), INTENT(IN) :: x\n    !! point of evaluation\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: xij(1, order + 1)\n    !! interpolation points\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: coeff(order + 1, order + 1)\n    !! coefficient of Lagrange polynomials\n    LOGICAL(LGT), OPTIONAL :: firstCall\n    !! If firstCall is true, then coeff will be made\n    !! If firstCall is False, then coeff will be used\n    !! Default value of firstCall is True\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: orthopol\n    !! Monomial\n    !! Jacobi\n    !! Legendre\n    !! Chebyshev\n    !! Lobatto\n    !! UnscaledLobatto\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha\n    !! Jacobi polynomial parameter\n    REAL(DFP), OPTIONAL, INTENT(IN) :: beta\n    !! Jacobi polynomial parameter\n    REAL(DFP), OPTIONAL, INTENT(IN) :: lambda\n    !! Ultraspherical parameter\n    REAL(DFP) :: ans(order + 1)\n    !! Value of n+1 Lagrange polynomials at point x\n  END FUNCTION LagrangeEvalAll_Line1\nEND INTERFACE LagrangeEvalAll_Line\n"})}),(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{children:(0,a.jsx)(n.code,{children:"x"})}),(0,a.jsx)(n.p,{children:"Point of evaluation."})]}),(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{children:(0,a.jsx)(n.code,{children:"xij"})}),(0,a.jsx)(n.p,{children:"Interpolation points. SIZE(xij, 1) is 1. SIZE(xij, 2) should be equal to order+1."})]}),(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{children:(0,a.jsx)(n.code,{children:"order"})}),(0,a.jsx)(n.p,{children:"order denotes the order of polynomial space."})]}),(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{children:(0,a.jsx)(n.code,{children:"orthopol"})}),(0,a.jsx)(n.p,{children:"Currently, we can specify following types of orthogonal polynomials:"}),(0,a.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Jacobi"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Ultraspherical"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Legendre"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Chebyshev"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Lobatto"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","UnscaledLobatto"]}),"\n"]})]}),(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{children:(0,a.jsx)(n.code,{children:"alpha, beta"})}),(0,a.jsxs)(n.p,{children:["alpha and beta are parameters of Jacobi Polynomials. They should be present when ",(0,a.jsx)(n.code,{children:"orthopol"})," is equal to ",(0,a.jsx)(n.code,{children:"Jacobi"})]})]}),(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{children:(0,a.jsx)(n.code,{children:"lambda"})}),(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"lambda"})," is parameter for Ultraspherical polynomials. They should be present when ",(0,a.jsx)(n.code,{children:"orthopol"})," is equal to the ",(0,a.jsx)(n.code,{children:"Ultraspherical"})]})]}),(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{children:(0,a.jsx)(n.code,{children:"ans"})}),(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"ans"})," denotes the ",(0,a.jsx)(n.code,{children:"order+1"})," coefficents of ith polynomial."]})]}),(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsxs)(n.mdxAdmonitionTitle,{children:[(0,a.jsx)(n.code,{children:"coeff"})," and ",(0,a.jsx)(n.code,{children:"firstCall"})]}),(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"coeff"})," denotes the coefficients of Lagrange polynomial. The jth col of ",(0,a.jsx)(n.code,{children:"coeff"})," dentotes the coefficient of jth Lagrange polynomial."]}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["If ",(0,a.jsx)(n.code,{children:"firstCall"})," is true and ",(0,a.jsx)(n.code,{children:"coeff"})," is present, then this function will return ",(0,a.jsx)(n.code,{children:"coeff"}),", which can be used later. Note that computation of ",(0,a.jsx)(n.code,{children:"coeff"})," involves inversion of a matrix."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["If ",(0,a.jsx)(n.code,{children:"firstCall"})," is false and ",(0,a.jsx)(n.code,{children:"coeff"})," is present, then this function will use ",(0,a.jsx)(n.code,{children:"coeff"}),"."]}),"\n"]}),"\n"]})]})]}),(0,a.jsx)(o.Z,{value:"example",label:"\ufe0f\u0700 See example",children:(0,a.jsx)(s,{})}),(0,a.jsx)(o.Z,{value:"example2",label:"Example 2",children:(0,a.jsx)(d,{})}),(0,a.jsx)(o.Z,{value:"close",label:"\u21a2 "})]}),"\n",(0,a.jsx)(n.h2,{id:"interface-2",children:"Interface 2"}),"\n",(0,a.jsxs)(i.Z,{children:[(0,a.jsxs)(o.Z,{value:"interface",label:"\u0700 Interface",default:!0,children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE LagrangeEvalAll_Line\n  MODULE FUNCTION LagrangeEvalAll_Line2(order, x, xij, coeff, firstCall, &\n    & orthopol, alpha, beta, lambda) &\n    & RESULT(ans)\n    INTEGER(I4B), INTENT(IN) :: order\n    !! order of Lagrange polynomials\n    REAL(DFP), INTENT(IN) :: x(:)\n    !! point of evaluation\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: xij(1, order + 1)\n    !! interpolation points\n    REAL(DFP), OPTIONAL, INTENT(INOUT) :: coeff(order + 1, order + 1)\n    !! coefficient of Lagrange polynomials\n    LOGICAL(LGT), OPTIONAL :: firstCall\n    !! If firstCall is true, then coeff will be made\n    !! If firstCall is False, then coeff will be used\n    !! Default value of firstCall is True\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: orthopol\n    !! Monomial\n    !! Jacobi\n    !! Legendre\n    !! Chebyshev\n    !! Lobatto\n    !! UnscaledLobatto\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha\n    !! Jacobi polynomial parameter\n    REAL(DFP), OPTIONAL, INTENT(IN) :: beta\n    !! Jacobi polynomial parameter\n    REAL(DFP), OPTIONAL, INTENT(IN) :: lambda\n    !! Ultraspherical parameter\n    REAL(DFP) :: ans(SIZE(x), order + 1)\n    !! Value of n+1 Lagrange polynomials at point x\n    !! ans(:, j) is the value of jth polynomial at x points\n    !! ans(i, :) is the value of all polynomials at x(i) point\n  END FUNCTION LagrangeEvalAll_Line2\nEND INTERFACE LagrangeEvalAll_Line\n"})}),(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{children:(0,a.jsx)(n.code,{children:"x"})}),(0,a.jsx)(n.p,{children:"Point of evaluation."})]}),(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{children:(0,a.jsx)(n.code,{children:"xij"})}),(0,a.jsx)(n.p,{children:"Interpolation points. SIZE(xij, 1) is 1. SIZE(xij, 2) should be equal to order+1."})]}),(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{children:(0,a.jsx)(n.code,{children:"order"})}),(0,a.jsx)(n.p,{children:"order denotes the order of polynomial space."})]}),(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{children:(0,a.jsx)(n.code,{children:"orthopol"})}),(0,a.jsx)(n.p,{children:"Currently, we can specify following types of orthogonal polynomials:"}),(0,a.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Jacobi"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Ultraspherical"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Legendre"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Chebyshev"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Lobatto"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","UnscaledLobatto"]}),"\n"]})]}),(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{children:(0,a.jsx)(n.code,{children:"alpha, beta"})}),(0,a.jsxs)(n.p,{children:["alpha and beta are parameters of Jacobi Polynomials. They should be present when ",(0,a.jsx)(n.code,{children:"orthopol"})," is equal to ",(0,a.jsx)(n.code,{children:"Jacobi"})]})]}),(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{children:(0,a.jsx)(n.code,{children:"lambda"})}),(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"lambda"})," is parameter for Ultraspherical polynomials. They should be present when ",(0,a.jsx)(n.code,{children:"orthopol"})," is equal to the ",(0,a.jsx)(n.code,{children:"Ultraspherical"})]})]}),(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{children:(0,a.jsx)(n.code,{children:"ans"})}),(0,a.jsxs)(n.p,{children:["jth col of ",(0,a.jsx)(n.code,{children:"ans"})," denotes the ",(0,a.jsx)(n.code,{children:"order+1"})," coefficents of jth polynomial."]})]}),(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsxs)(n.mdxAdmonitionTitle,{children:[(0,a.jsx)(n.code,{children:"coeff"})," and ",(0,a.jsx)(n.code,{children:"firstCall"})]}),(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"coeff"})," denotes the coefficients of Lagrange polynomial. The jth col of ",(0,a.jsx)(n.code,{children:"coeff"})," dentotes the coefficient of jth Lagrange polynomial."]}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["If ",(0,a.jsx)(n.code,{children:"firstCall"})," is true and ",(0,a.jsx)(n.code,{children:"coeff"})," is present, then this function will return ",(0,a.jsx)(n.code,{children:"coeff"}),", which can be used later. Note that computation of ",(0,a.jsx)(n.code,{children:"coeff"})," involves inversion of a matrix."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["If ",(0,a.jsx)(n.code,{children:"firstCall"})," is false and ",(0,a.jsx)(n.code,{children:"coeff"})," is present, then this function will use ",(0,a.jsx)(n.code,{children:"coeff"}),"."]}),"\n"]}),"\n"]})]})]}),(0,a.jsx)(o.Z,{value:"example",label:"\ufe0f\u0700 See example",children:(0,a.jsx)(h,{})}),(0,a.jsx)(o.Z,{value:"close",label:"\u21a2 "})]})]})}function g(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(b,{...e})}):b(e)}},85162:(e,n,l)=>{l.d(n,{Z:()=>o});l(67294);var a=l(86010);const t={tabItem:"tabItem_Ymn6"};var i=l(85893);function o(e){let{children:n,hidden:l,className:o}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.Z)(t.tabItem,o),hidden:l,children:n})}},74866:(e,n,l)=>{l.d(n,{Z:()=>I});var a=l(67294),t=l(86010),i=l(12466),o=l(16550),r=l(20469),s=l(91980),c=l(67392),d=l(50012);function p(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:l}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:l,attributes:a,default:t}}=e;return{value:n,label:l,attributes:a,default:t}}))}(l);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,l])}function u(e){let{value:n,tabValues:l}=e;return l.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:l}=e;const t=(0,o.k6)(),i=function(e){let{queryString:n=!1,groupId:l}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!l)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return l??null}({queryString:n,groupId:l});return[(0,s._X)(i),(0,a.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(t.location.search);n.set(i,e),t.replace({...t.location,search:n.toString()})}),[i,t])]}function x(e){const{defaultValue:n,queryString:l=!1,groupId:t}=e,i=h(e),[o,s]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:l}=e;if(0===l.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:l}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${l.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=l.find((e=>e.default))??l[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:i}))),[c,p]=f({queryString:l,groupId:t}),[x,m]=function(e){let{groupId:n}=e;const l=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,i]=(0,d.Nk)(l);return[t,(0,a.useCallback)((e=>{l&&i.set(e)}),[l,i])]}({groupId:t}),j=(()=>{const e=c??x;return u({value:e,tabValues:i})?e:null})();(0,r.Z)((()=>{j&&s(j)}),[j]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!u({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),m(e)}),[p,m,i]),tabValues:i}}var m=l(72389);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=l(85893);function g(e){let{className:n,block:l,selectedValue:a,selectValue:o,tabValues:r}=e;const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),d=e=>{const n=e.currentTarget,l=s.indexOf(n),t=r[l].value;t!==a&&(c(n),o(t))},p=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const l=s.indexOf(e.currentTarget)+1;n=s[l]??s[0];break}case"ArrowLeft":{const l=s.indexOf(e.currentTarget)-1;n=s[l]??s[s.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.Z)("tabs",{"tabs--block":l},n),children:r.map((e=>{let{value:n,label:l,attributes:i}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>s.push(e),onKeyDown:p,onClick:d,...i,className:(0,t.Z)("tabs__item",j.tabItem,i?.className,{"tabs__item--active":a===n}),children:l??n},n)}))})}function L(e){let{lazy:n,children:l,selectedValue:t}=e;const i=(Array.isArray(l)?l:[l]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===t));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function y(e){const n=x(e);return(0,b.jsxs)("div",{className:(0,t.Z)("tabs-container",j.tabList),children:[(0,b.jsx)(g,{...e,...n}),(0,b.jsx)(L,{...e,...n})]})}function I(e){const n=(0,m.Z)();return(0,b.jsx)(y,{...e,children:p(e.children)},String(n))}},11151:(e,n,l)=>{l.d(n,{Z:()=>r,a:()=>o});var a=l(67294);const t={},i=a.createContext(t);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);
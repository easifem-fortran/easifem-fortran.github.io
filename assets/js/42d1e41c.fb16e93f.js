"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[73596],{94177:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var r=t(85893),s=t(11151);const o={},i="GetPressureNeumannBCPointer",a={id:"AbstractSTDBE/GetPressureNeumannBCPointer",title:"GetPressureNeumannBCPointer",description:"This routine returns the pointer to Neumann boundary condition of pressure field in AbstractSTDBE kernel, that is obj%NBCForPressure(nbcNo)%ptr.",source:"@site/docs/docs-api/AbstractSTDBE/GetPressureNeumannBCPointer.md",sourceDirName:"AbstractSTDBE",slug:"/AbstractSTDBE/GetPressureNeumannBCPointer",permalink:"/docs-api/AbstractSTDBE/GetPressureNeumannBCPointer",draft:!1,unlisted:!1,editUrl:"https://github.com/easifem-fortran/easifem-fortran.github.io/tree/main/docs/docs-api/AbstractSTDBE/GetPressureNeumannBCPointer.md",tags:[],version:"current",lastUpdatedAt:1701057211,formattedLastUpdatedAt:"Nov 27, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"GetPressureDirichletBCPointer",permalink:"/docs-api/AbstractSTDBE/GetPressureDirichletBCPointer"},next:{title:"GetVelocityDirichletBCPointer",permalink:"/docs-api/AbstractSTDBE/GetVelocityDirichletBCPointer"}},c={},u=[];function d(e){const n={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"getpressureneumannbcpointer",children:"GetPressureNeumannBCPointer"}),"\n",(0,r.jsxs)(n.p,{children:["This routine returns the pointer to Neumann boundary condition of pressure field in ",(0,r.jsx)(n.a,{href:"/docs-api/AbstractSTDBE/AbstractSTDBE_",children:"AbstractSTDBE_"})," kernel, that is ",(0,r.jsx)(n.code,{children:"obj%NBCForPressure(nbcNo)%ptr"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"After obtaining the Neumann boundary condition pointer, user can set the boundary condition"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nbcNo"})," should be lesser than total Neumann boundary condition"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE FUNCTION STDBE_GetPressureNeumannBCPointer(obj, nbcNo) RESULT(ans)\n    CLASS(AbstractSTDBE_), INTENT(INOUT) :: obj\n    INTEGER(I4B), INTENT(IN) :: nbcNo\n    !! Neumann boundary nunber\n    CLASS(NeumannBC_), POINTER :: ans\n  END FUNCTION STDBE_GetPressureNeumannBCPointer\nEND INTERFACE\n"})})]})}function l(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>i});var r=t(67294);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);
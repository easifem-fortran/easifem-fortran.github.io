"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[90968],{99378:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var n=t(85893),a=t(11151);const i={},r="Methods",o={id:"ChebyshevFirstSpace1D/ChebyshevFirstSpace1D_",title:"Methods",description:"Functional space made of Chebyshev polynomials of first kind. See [[ChebyshevFirst1D]] and [[AbstractOrthopol1D]].",source:"@site/docs/docs-api/ChebyshevFirstSpace1D/ChebyshevFirstSpace1D_.md",sourceDirName:"ChebyshevFirstSpace1D",slug:"/ChebyshevFirstSpace1D/ChebyshevFirstSpace1D_",permalink:"/docs-api/ChebyshevFirstSpace1D/ChebyshevFirstSpace1D_",draft:!1,unlisted:!1,editUrl:"https://github.com/easifem-fortran/easifem-fortran.github.io/tree/main/docs/docs-api/ChebyshevFirstSpace1D/ChebyshevFirstSpace1D_.md",tags:[],version:"current",lastUpdatedAt:1701057211,formattedLastUpdatedAt:"Nov 27, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ChebyshevSpace1D",permalink:"/docs-api/ChebyshevFirstSpace1D/"},next:{title:"CommandLine",permalink:"/docs-api/CommandLine/"}},c={},l=[{value:"Structure",id:"structure",level:2},{value:"ConstructorMethods",id:"constructormethods",level:2},{value:"ChebyshevFirstSpace",id:"chebyshevfirstspace",level:3},{value:"IOMethods",id:"iomethods",level:2},{value:"Display",id:"display",level:3},{value:"GetMethods",id:"getmethods",level:2},{value:"Eval",id:"eval",level:3},{value:"EvalGradient",id:"evalgradient",level:3},{value:"SetMethods",id:"setmethods",level:2}];function d(e){const s={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.p,{children:"Functional space made of Chebyshev polynomials of first kind. See [[ChebyshevFirst1D_]] and [[AbstractOrthopol1D_]]."}),"\n",(0,n.jsx)(s.h2,{id:"structure",children:"Structure"}),"\n",(0,n.jsx)(s.h2,{id:"constructormethods",children:"ConstructorMethods"}),"\n",(0,n.jsx)(s.h3,{id:"chebyshevfirstspace",children:"ChebyshevFirstSpace"}),"\n",(0,n.jsx)(s.p,{children:"Usage example is given below."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-fortran",children:"obj = ChebyshevFirstSpace(n=10)\n"})}),"\n",(0,n.jsx)(s.h2,{id:"iomethods",children:"IOMethods"}),"\n",(0,n.jsx)(s.h3,{id:"display",children:"Display"}),"\n",(0,n.jsx)(s.p,{children:"Usage example is given below."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-fortran",children:'CALL obj%Display( msg="test message", unitno=stdout )\n'})}),"\n",(0,n.jsx)(s.h2,{id:"getmethods",children:"GetMethods"}),"\n",(0,n.jsx)(s.h3,{id:"eval",children:"Eval"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"Eval"})," evaluate all the basis in the space at a given point. The following function will return a vector ",(0,n.jsx)(s.code,{children:"y"}),"."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-fortran",children:"y = obj%Eval( x=x ) !! here x is scalar, y is vector\n"})}),"\n",(0,n.jsxs)(s.p,{children:["We can also evaluate basis functions at several ",(0,n.jsx)(s.code,{children:"x"})," if we supply a vector ",(0,n.jsx)(s.code,{children:"x"})," to ",(0,n.jsx)(s.code,{children:"Eval"}),"."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-fortran",children:"y = obj%Eval( x=x )\n"})}),"\n",(0,n.jsx)(s.admonition,{type:"note",children:(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"y(:,i)"})," contains values of basis function at point x(i)."]})}),"\n",(0,n.jsx)(s.h3,{id:"evalgradient",children:"EvalGradient"}),"\n",(0,n.jsxs)(s.p,{children:["This function evaluate each basis function at a given point. If we pass a single value of ",(0,n.jsx)(s.code,{children:"x"}),", then it returns a vector ",(0,n.jsx)(s.code,{children:"y"}),". In this case ",(0,n.jsx)(s.code,{children:"y(i)"})," denotes the value of gradient of ith basis function evaluated at point ",(0,n.jsx)(s.code,{children:"x(i)"}),". The usage is given below."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-fortran",children:"y = obj%EvalGradient( x=x )\n"})}),"\n",(0,n.jsxs)(s.p,{children:["We can also evaluate gradient at several values by passing a vector of points ",(0,n.jsx)(s.code,{children:"x"}),"."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-fortran",children:"y(:,:) = obj%EvalGradient( x=x(:) )\n"})}),"\n",(0,n.jsx)(s.h2,{id:"setmethods",children:"SetMethods"})]})}function h(e={}){const{wrapper:s}={...(0,a.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},11151:(e,s,t)=>{t.d(s,{Z:()=>o,a:()=>r});var n=t(67294);const a={},i=n.createContext(a);function r(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);
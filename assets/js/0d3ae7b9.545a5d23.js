"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[43249],{90175:(t,o,e)=>{e.r(o),e.d(o,{assets:()=>m,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var n=e(85893),r=e(11151);const a={},i="ImportFromToml",c={id:"AbstractBC/ImportFromToml",title:"ImportFromToml",description:"Initiate an instance of AbstractBC_ from toml configuration.",source:"@site/docs/docs-api/AbstractBC/ImportFromToml.md",sourceDirName:"AbstractBC",slug:"/AbstractBC/ImportFromToml",permalink:"/docs-api/AbstractBC/ImportFromToml",draft:!1,unlisted:!1,editUrl:"https://github.com/vickysharma0812/vickysharma0812.github.io/tree/main/docs/docs-api/AbstractBC/ImportFromToml.md",tags:[],version:"current",lastUpdatedAt:1701147514,formattedLastUpdatedAt:"Nov 28, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Import",permalink:"/docs-api/AbstractBC/Import"},next:{title:"Initiate",permalink:"/docs-api/AbstractBC/Initiate"}},m={},s=[{value:"Interface 1",id:"interface-1",level:2},{value:"Interface 2",id:"interface-2",level:2},{value:"TOML configuration",id:"toml-configuration",level:2}];function l(t){const o={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h1,{id:"importfromtoml",children:"ImportFromToml"}),"\n",(0,n.jsxs)(o.p,{children:["Initiate an instance of ",(0,n.jsx)(o.code,{children:"AbstractBC_"})," from toml configuration."]}),"\n",(0,n.jsx)(o.h2,{id:"interface-1",children:"Interface 1"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-fortran",children:"INTERFACE AbstractBCImportFromToml\n  MODULE SUBROUTINE bc_ImportFromToml1(obj, table, dom)\n    CLASS(AbstractBC_), INTENT(INOUT) :: obj\n    TYPE(toml_table), INTENT(INOUT) :: table\n    CLASS(Domain_), TARGET, INTENT(IN) :: dom\n  END SUBROUTINE bc_ImportFromToml1\nEND INTERFACE AbstractBCImportFromToml\n"})}),"\n",(0,n.jsx)(o.h2,{id:"interface-2",children:"Interface 2"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-fortran",children:"INTERFACE AbstractBCImportFromToml\n  MODULE SUBROUTINE bc_ImportFromToml2(obj, dom, tomlName, afile,  &\n    & filename, printToml)\n    CLASS(AbstractBC_), INTENT(INOUT) :: obj\n    CLASS(Domain_), TARGET, INTENT(IN) :: dom\n    CHARACTER(*), INTENT(IN) :: tomlName\n    TYPE(TxtFile_), OPTIONAL, INTENT(INOUT) :: afile\n    CHARACTER(*), OPTIONAL, INTENT(IN) :: filename\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: printToml\n  END SUBROUTINE bc_ImportFromToml2\nEND INTERFACE AbstractBCImportFromToml\n"})}),"\n",(0,n.jsx)(o.h2,{id:"toml-configuration",children:"TOML configuration"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-toml",children:'luaScript = "./hello.lua"\n# name of the lua script which contains the functions\n\nluaFunctionName = "hello"\n# which function in the lua script to be used for boundary condition\n'})})]})}function d(t={}){const{wrapper:o}={...(0,r.a)(),...t.components};return o?(0,n.jsx)(o,{...t,children:(0,n.jsx)(l,{...t})}):l(t)}},11151:(t,o,e)=>{e.d(o,{Z:()=>c,a:()=>i});var n=e(67294);const r={},a=n.createContext(r);function i(t){const o=n.useContext(a);return n.useMemo((function(){return"function"==typeof t?t(o):{...o,...t}}),[o,t])}function c(t){let o;return o=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:i(t.components),n.createElement(a.Provider,{value:o},t.children)}}}]);
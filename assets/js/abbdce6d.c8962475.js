"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[96568],{40674:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>h});var l=t(85893),s=t(11151);function o(e){const n={code:"code",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.p,{children:"This example shows how to get the element to element connectivity data in the mesh."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\n  USE easifemBase\n  USE easifemClasses\n  IMPLICIT NONE\n  TYPE( Mesh_ ) :: obj\n  TYPE( HDF5File_ ) :: meshfile\n  INTEGER( I4B ), ALLOCATABLE :: nptrs( :, : )\n\n  ! Initiate and open the mesh file which is in [[HDF5File_]] format. Then, create an instance of mesh.\n\nCALL meshfile%Initiate( FileName="./mesh.h5", MODE="READ" )\nCALL meshfile%Open()\nCALL obj%Initiate(hdf5=meshfile, group="/surfaceEntities_1" )\n'})}),"\n",(0,l.jsxs)(n.p,{children:["! Now we get the full information about the element connected to the given global element numbers.\n! In this case we set ",(0,l.jsx)(n.code,{children:"onlyElements=.FALSE."}),",\n! or you can ignore this argument as it is optional, with default value of ",(0,l.jsx)(n.code,{children:".FALSE."}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:'nptrs = obj%GetElementToElements( globalElement=250, onlyElements=.FALSE. )\nCALL Display( nptrs, "Element connected to iel=250")\n'})}),"\n",(0,l.jsx)(n.p,{children:"We get the following output."}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"global Element number of neighbour"}),(0,l.jsx)(n.th,{children:"facet number of parent"}),(0,l.jsx)(n.th,{children:"facet number of neighbour"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"352"}),(0,l.jsx)(n.td,{children:"1"}),(0,l.jsx)(n.td,{children:"3"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"221"}),(0,l.jsx)(n.td,{children:"2"}),(0,l.jsx)(n.td,{children:"3"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"229"}),(0,l.jsx)(n.td,{children:"3"}),(0,l.jsx)(n.td,{children:"2"})]})]})]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"The first column is the global element number of neighbour."}),"\n",(0,l.jsx)(n.li,{children:"The second column is the local facet number of the parent (iel=250)"}),"\n",(0,l.jsx)(n.li,{children:"The third column is the local facet number of neighbour"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"If you only want the global element numbers of the neighbours, then you can set onlyElements=.TRUE."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:'nptrs = obj%GetElementToElements( globalElement=250, onlyElements=.TRUE. )\nCALL Display( nptrs, "Element connected to iel=250")\n'})}),"\n",(0,l.jsx)(n.p,{children:"Now we get the full information about the element connected to the given global element numbers."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:'nptrs = obj%GetElementToElements( globalElement=316, onlyElements=.FALSE. )\nCALL Display( nptrs, "Element connected to iel=316")\n\n  CALL obj%Deallocate()\n  CALL meshfile%Close()\n  CALL meshfile%Deallocate()\nEND PROGRAM main\n'})})]})}function i(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}const r={},a="GetElementToElements",c={id:"Mesh/GetElementToElements",title:"GetElementToElements",description:"Get element to elements connectivity information.",source:"@site/docs/docs-api/Mesh/GetElementToElements.md",sourceDirName:"Mesh",slug:"/Mesh/GetElementToElements",permalink:"/docs-api/Mesh/GetElementToElements",draft:!1,unlisted:!1,editUrl:"https://github.com/easifem-fortran/easifem-fortran.github.io/tree/main/docs/docs-api/Mesh/GetElementToElements.md",tags:[],version:"current",lastUpdatedAt:1706190029,formattedLastUpdatedAt:"Jan 25, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"GetElemNum",permalink:"/docs-api/Mesh/GetElemNum"},next:{title:"GetFacetConnectivity",permalink:"/docs-api/Mesh/GetFacetConnectivity"}},m={},h=[{value:"Interface",id:"interface",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components},{TabItem:t,Tabs:o}=n;return t||E("TabItem",!0),o||E("Tabs",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"getelementtoelements",children:"GetElementToElements"}),"\n",(0,l.jsx)(n.p,{children:"Get element to elements connectivity information."}),"\n",(0,l.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,l.jsxs)(o,{children:[(0,l.jsx)(t,{value:"interface",label:"Interface",default:!0,children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-fortran",children:"MODULE PURE FUNCTION getElementToElements(obj, globalElement, &\n  & onlyElements) RESULT(ans)\n  CLASS(Mesh_), INTENT(IN) :: obj\n  !! mesh data\n  INTEGER(I4B), INTENT(IN) :: globalElement\n  !! Global element number\n  LOGICAL(LGT), OPTIONAL, INTENT(IN) :: onlyElements\n  !! If onlyElements is absent or it is FALSE then full information\n  !! about the elements connected to element iel is given\n  !! If onlyElements is present and it is TRUE then only the\n  !! information about the elements connected to element iel is given\n  INTEGER(I4B), ALLOCATABLE :: ans(:, :)\n  !! list of elements surrounding elements\nEND FUNCTION getElementToElements\n"})})}),(0,l.jsx)(t,{value:"example",label:"example",children:(0,l.jsx)(i,{})}),(0,l.jsx)(t,{value:"close",label:"\u21a2 close"})]})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}function E(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},11151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>i});var l=t(67294);const s={},o=l.createContext(s);function i(e){const n=l.useContext(o);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),l.createElement(o.Provider,{value:n},e.children)}}}]);
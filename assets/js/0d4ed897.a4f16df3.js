"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[56778],{12710:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>t,metadata:()=>s,toc:()=>d});var i=a(85893),r=a(11151);const t={title:"LidDrivenCavity example 1",authors:"Vikas Sharma, Ph. D.",date:"20 Jan 2022",update:"20 Jan 2022",tags:["STDarcyBrinkmann/Initiate","STDarcyBrinkmann/AddPorousMaterial","STDarcyBrinkmann/AddVelocityBC","STDarcyBrinkmann/GetVelocityBCPointer","STDarcyBrinkmann/AddPressureBC","STDarcyBrinkmann/GetPressureBCPointer","STDarcyBrinkmann/Set","STDarcyBrinkmann/AssembleTanMat"]},o="LidDrivenCavity example 1",s={id:"STDarcyBrinkmann/LidDrivenCavity/LidDrivenCavity_test_1",title:"LidDrivenCavity example 1",description:'!!! note ""',source:"@site/docs/docs-api/STDarcyBrinkmann/LidDrivenCavity/LidDrivenCavity_test_1.md",sourceDirName:"STDarcyBrinkmann/LidDrivenCavity",slug:"/STDarcyBrinkmann/LidDrivenCavity/LidDrivenCavity_test_1",permalink:"/docs-api/STDarcyBrinkmann/LidDrivenCavity/LidDrivenCavity_test_1",draft:!1,unlisted:!1,editUrl:"https://github.com/vickysharma0812/vickysharma0812.github.io/tree/main/docs/docs-api/STDarcyBrinkmann/LidDrivenCavity/LidDrivenCavity_test_1.md",tags:[{label:"STDarcyBrinkmann/Initiate",permalink:"/docs-api/tags/st-darcy-brinkmann-initiate"},{label:"STDarcyBrinkmann/AddPorousMaterial",permalink:"/docs-api/tags/st-darcy-brinkmann-add-porous-material"},{label:"STDarcyBrinkmann/AddVelocityBC",permalink:"/docs-api/tags/st-darcy-brinkmann-add-velocity-bc"},{label:"STDarcyBrinkmann/GetVelocityBCPointer",permalink:"/docs-api/tags/st-darcy-brinkmann-get-velocity-bc-pointer"},{label:"STDarcyBrinkmann/AddPressureBC",permalink:"/docs-api/tags/st-darcy-brinkmann-add-pressure-bc"},{label:"STDarcyBrinkmann/GetPressureBCPointer",permalink:"/docs-api/tags/st-darcy-brinkmann-get-pressure-bc-pointer"},{label:"STDarcyBrinkmann/Set",permalink:"/docs-api/tags/st-darcy-brinkmann-set"},{label:"STDarcyBrinkmann/AssembleTanMat",permalink:"/docs-api/tags/st-darcy-brinkmann-assemble-tan-mat"}],version:"current",lastUpdatedAt:1701101849,formattedLastUpdatedAt:"Nov 27, 2023",frontMatter:{title:"LidDrivenCavity example 1",authors:"Vikas Sharma, Ph. D.",date:"20 Jan 2022",update:"20 Jan 2022",tags:["STDarcyBrinkmann/Initiate","STDarcyBrinkmann/AddPorousMaterial","STDarcyBrinkmann/AddVelocityBC","STDarcyBrinkmann/GetVelocityBCPointer","STDarcyBrinkmann/AddPressureBC","STDarcyBrinkmann/GetPressureBCPointer","STDarcyBrinkmann/Set","STDarcyBrinkmann/AssembleTanMat"]},sidebar:"tutorialSidebar",previous:{title:"STDarcyBrinkmann",permalink:"/docs-api/STDarcyBrinkmann/"},next:{title:"LidDrivenCavity paraview visualization",permalink:"/docs-api/STDarcyBrinkmann/LidDrivenCavity/paraviz"}},l={},d=[{value:"Modules &amp; Classes",id:"modules--classes",level:2},{value:"Usages",id:"usages",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"liddrivencavity-example-1",children:"LidDrivenCavity example 1"}),"\n",(0,i.jsx)(e.p,{children:'!!! note ""\nThis example solves a benchmark problem of LidDrivenCavity.'}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Mesh used for velocity and pressure field is the same."}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.img,{src:a(91586).Z+"",width:"1334",height:"773"}),"\n",(0,i.jsx)(e.img,{src:a(59813).Z+"",width:"1334",height:"773"})]}),"\n",(0,i.jsx)(e.h2,{id:"modules--classes",children:"Modules & Classes"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"[[STDarcyBrinkmann_]]"}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"usages",children:"Usages"}),"\n",(0,i.jsx)(e.p,{children:'!!! note ""\nIMPORT the modules.'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:"PROGRAM main\n  USE easifemBase\n  USE easifemClasses\n  USE easifemMaterials\n  USE easifemKernels\n  USE STDarcyBrinkmann_Class\n  IMPLICIT NONE\n"})}),"\n",(0,i.jsx)(e.p,{children:'!!! note ""\nDefine the variables.'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:'  TYPE(STDarcyBrinkmann_) :: obj\n  TYPE(ParameterList_) :: param\n  TYPE(HDF5File_) :: domainFileForPressure\n  TYPE(HDF5File_) :: domainFileForVelocity\n  TYPE( HDF5File_ ) :: outfile\n  TYPE(MeshSelection_) :: region\n  TYPE(Domain_), TARGET :: domainForPressure\n  TYPE(Domain_), TARGET :: domainForVelocity\n  TYPE(DomainPointer_) :: domains(2)\n  CLASS(DirichletBC_), POINTER :: dbc => NULL()\n  CHARACTER(LEN=*), PARAMETER :: &\n    & domainFileNameForPressure = "./mesh.h5"\n  CHARACTER(LEN=*), PARAMETER :: &\n    & domainFileNameForVelocity = "./mesh.h5"\n  CHARACTER( LEN = * ), PARAMETER :: &\n    & outfileName="./LidDrivenCavity.output.h5"\n  INTEGER(I4B), PARAMETER :: nnt = 2\n  INTEGER(I4B), PARAMETER :: TotalTimeSteps = 1\n  REAL(DFP), PARAMETER :: startTime=0.0_DFP\n  REAL(DFP), PARAMETER :: endTime=1.0_DFP\n  REAL(DFP), PARAMETER :: dt=0.01_DFP\n  INTEGER( I4B ), PARAMETER :: maxIter=5\n  REAL( DFP ), PARAMETER :: tol_Pressure=1.0D-8\n  REAL( DFP ), PARAMETER :: tol_Velocity=1.0D-8\n  INTEGER(I4B), PARAMETER :: tPorousMaterials = 1\n  INTEGER(I4B), PARAMETER :: tFluidMaterials = 1\n  INTEGER(I4B), PARAMETER :: tDirichletBCForVelocity = 3\n  INTEGER(I4B), PARAMETER :: tDirichletBCForPressure = 1\n  INTEGER(I4B), PARAMETER :: maxIter_LinSolver = 20 * 100\n  INTEGER(I4B), PARAMETER :: KrylovSubspaceSize = 20\n  REAL(DFP), PARAMETER :: rtol_LinSolver=1.0D-8\n  REAL(DFP), PARAMETER :: atol_LinSolver=1.0D-12\n  INTEGER(I4B), PARAMETER :: LinSolver_name = LIS_GMRES\n  INTEGER(I4B), PARAMETER :: preconditionOption = LIS_GMRES\n  REAL(DFP), PARAMETER :: porosity=1.0\n  REAL(DFP), PARAMETER :: massdensity_soil=1700.0\n  REAL(DFP), PARAMETER :: permeability=1.0D+20\n  REAL(DFP), PARAMETER :: massdensity_fluid=1000.0\n  REAL(DFP), PARAMETER :: dynamicViscosity=0.001_DFP\n  REAL(DFP), PARAMETER :: V_TOP=0.001_DFP\n  LOGICAL( LGT ) :: convg\n  INTEGER( I4B ) :: iter\n  INTEGER( I4B ) :: its\n'})}),"\n",(0,i.jsx)(e.p,{children:'!!! note ""\nInitiate an instance of [[ParameterList_]], param, this will be used to initiate several objects.'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:"  CALL FPL_INIT(); CALL param%Initiate()\n"})}),"\n",(0,i.jsx)(e.p,{children:'!!! note "SetSTDarcyBrinkmannParam"'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:'  CALL SetSTDarcyBrinkmannParam( &\n    & param=param, &\n    & engine="NATIVE_SERIAL", &\n    & nnt=nnt, &\n    & startTime=startTime, &\n    & endTime=endTime, &\n    & dt=dt, &\n    & CoordinateSystem=KERNEL_2D, &\n    & maxIter=maxIter, &\n    & convergenceType=absoluteConvergence, &\n    & toleranceForPressure=tol_pressure, &\n    & toleranceForVelocity=tol_velocity, &\n    & tPorousMaterials=tPorousMaterials, &\n    & tFluidMaterials=tFluidMaterials, &\n    & tDirichletBCForPressure=tDirichletBCForPressure, &\n    & tDirichletBCForVelocity=tDirichletBCForVelocity, &\n    & domainFileForPressure=domainFileNameForPressure, &\n    & domainFileForVelocity=domainFileNameForVelocity)\n'})}),"\n",(0,i.jsx)(e.p,{children:'!!! note "LinSolver"'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:"  CALL SetLinSolverParam( &\n    & param=param, &\n    & solverName=LinSolver_name,&\n    & preconditionOption=NO_PRECONDITION, &\n    & convergenceIn=convergenceInRes, &\n    & convergenceType=relativeConvergence, &\n    & maxIter=maxIter_LinSolver, &\n    & relativeToRHS=.TRUE., &\n    & KrylovSubspaceSize=KrylovSubspaceSize, &\n    & rtol=rtol_LinSolver, &\n    & atol=atol_LinSolver )\n"})}),"\n",(0,i.jsx)(e.p,{children:'!!! note "domainForPressure"'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:'  CALL domainFileForPressure%Initiate( &\n    & filename=domainFileNameForPressure, &\n    & MODE="READ")\n  CALL domainFileForPressure%Open()\n  CALL domainForPressure%Initiate(domainFileForPressure, "")\n  CALL domainFileForPressure%Deallocate()\n'})}),"\n",(0,i.jsx)(e.p,{children:'!!! note "domainForVelocity"'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:'  CALL domainFileForVelocity%Initiate(filename=domainFileNameForVelocity, &\n  & MODE="READ")\n  CALL domainFileForVelocity%Open()\n  CALL domainForVelocity%Initiate(domainFileForVelocity, "")\n  CALL domainFileForVelocity%Deallocate()\n'})}),"\n",(0,i.jsx)(e.p,{children:'!!! note "domains"\nPacking domains in a vector of [[DomainPointer_]]'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:"  domains(1)%ptr => domainForVelocity\n  domains(2)%ptr => domainForPressure\n"})}),"\n",(0,i.jsx)(e.p,{children:'!!! note "STDarcyBrinkmann%Initiate"'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:"  CALL obj%Initiate(param=param, domains=domains)\n"})}),"\n",(0,i.jsx)(e.p,{children:'!!! note "AddPorousMaterial"'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:'  CALL region%Initiate(isSelectionByMeshID=.TRUE.)\n  !!\n  CALL region%Add(dim=obj%nsd, meshID=[1])\n  !!\n  CALL SetPorousMaterialParam( &\n    & param=param, &\n    & name="porousMaterial", &\n    & massdensity=massdensity_soil, &\n    & porosity=porosity, &\n    & permeability=permeability )\n  !!\n  CALL obj%AddPorousMaterial( &\n    & materialNo=1, &\n    & materialName="porousMaterial", &\n    & param=param, &\n    & region=region)\n  !!\n  CALL region%Deallocate()\n'})}),"\n",(0,i.jsx)(e.p,{children:'!!! note "AddFluidMaterial"'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:'  CALL region%Initiate(isSelectionByMeshID=.TRUE.)\n  !!\n  CALL region%Add(dim=obj%nsd, meshID=[1])\n  !!\n  CALL SetFluidMaterialParam( &\n    & param=param, &\n    & name="fluidMaterial", &\n    & massDensity=massdensity_fluid, &\n    & dynamicViscosity=dynamicViscosity )\n  !!\n  CALL obj%AddFluidMaterial( &\n    & materialNo=1, &\n    & materialName="fluidMaterial", &\n    & param=param, &\n    & region=region )\n  !!\n  CALL region%Deallocate()\n'})}),"\n",(0,i.jsx)(e.p,{children:'!!! note "AddVelocityBC"'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:'  CALL SetDirichletBCParam( &\n    & param=param, &\n    & name="Vx=0", &\n    & idof=1, &\n    & nodalValueType=Constant, &\n    & useFunction=.FALSE.)\n  !!\n  CALL region%Initiate( &\n    & isSelectionByMeshID=.TRUE., &\n    & isSelectionByNodeNum=.TRUE. )\n  CALL region%Add(dim=obj%nsd-1, meshID=[1])\n  CALL region%Add(nodenum=&\n    & domainForVelocity%getInternalNptrs( &\n    & dim=obj%nsd-1, &\n    & entityNum=[2,4] ) )\n  CALL region%Set()\n  !!\n  CALL obj%AddVelocityBC(dbcNo=1, param=param, boundary=region)\n  CALL region%Deallocate()\n  dbc => obj%GetVelocityBCPointer(dbcNo=1)\n  CALL dbc%Set(ConstantNodalValue=0.0_DFP)\n  dbc => NULL()\n'})}),"\n",(0,i.jsx)(e.p,{children:'!!! note "AddVelocityBC"'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:'  CALL SetDirichletBCParam( &\n    & param=param, &\n    & name="Vy=0", &\n    & idof=2, &\n    & nodalValueType=Constant, &\n    & useFunction=.FALSE.)\n  !!\n  CALL region%Initiate(isSelectionByMeshID=.TRUE.)\n  CALL region%Add(dim=obj%nsd-1, meshID=[1])\n  CALL region%Add(nodenum=&\n    & domainForVelocity%getInternalNptrs( &\n    & dim=obj%nsd-1, &\n    & entityNum=[2,4] ) )\n  CALL region%Set()\n  !!\n  CALL obj%AddVelocityBC(dbcNo=2, param=param, boundary=region)\n  CALL region%Deallocate()\n  dbc => obj%GetVelocityBCPointer(dbcNo=2)\n  CALL dbc%Set(ConstantNodalValue=0.0_DFP)\n  dbc => NULL()\n'})}),"\n",(0,i.jsx)(e.p,{children:'!!! note "AddVelocityBC"'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:'  CALL SetDirichletBCParam( &\n    & param=param, &\n    & name="Vx=V", &\n    & idof=1, &\n    & nodalValueType=Constant, &\n    & useFunction=.FALSE.)\n  !!\n  CALL region%Initiate(isSelectionByMeshID=.TRUE.)\n  CALL region%Add(dim=obj%nsd-1, meshID=[3])\n  CALL region%Set()\n  !!\n  CALL obj%AddVelocityBC(dbcNo=3, param=param, boundary=region)\n  CALL region%Deallocate()\n  dbc => obj%GetVelocityBCPointer(dbcNo=3)\n  CALL dbc%Set(ConstantNodalValue=V_TOP)\n  dbc => NULL()\n'})}),"\n",(0,i.jsx)(e.p,{children:'!!! note "AddPressureBC"'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:'  CALL SetDirichletBCParam( &\n    & param=param, &\n    & name="P=0", &\n    & idof=1, &\n    & nodalValueType=Constant, &\n    & useFunction=.FALSE.)\n  !!\n  CALL region%Initiate(isSelectionByMeshID=.TRUE.)\n  CALL region%Add(dim=obj%nsd-1, meshID=[3])\n  CALL region%Set()\n  !!\n  CALL obj%AddPressureBC(dbcNo=1, param=param, boundary=region)\n  CALL region%Deallocate()\n  dbc => obj%GetPressureBCPointer(dbcNo=1)\n  CALL dbc%Set(ConstantNodalValue=0.0_DFP)\n  dbc => NULL()\n'})}),"\n",(0,i.jsx)(e.p,{children:'!!! note "Set"'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:"  CALL obj%Set( )\n  !!CALL obj%Display( 'obj: ' )\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:'    CALL outfile%Initiate(outfileName, "NEW")\n    CALL outfile%Open()\n'})}),"\n",(0,i.jsx)(e.p,{children:'!!! note "AssembleTanMat"'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:"  DO its = 1, TotalTimeSteps\n    obj%currentTimeStep = its\n    CALL obj%ApplyDirichletBC()\n    DO iter = 1, maxIter\n      obj%iterdata%iterationNumber=iter\n      CALL obj%AssembleTanmat()\n      CALL obj%AssembleRHS()\n      CALL obj%Assemble()\n      CALL obj%Solve()\n      convg = obj%isConverged()\n      CALL obj%sol%Display( &\n        & 'main, solution at iteration ' &\n        & // tostring( iter ), &\n        & unitno=10 )\n      IF( convg ) THEN\n        CALL obj%Update(reset=.FALSE.)\n        EXIT\n      ELSE\n        CALL obj%UpdateIteration(reset=.FALSE.)\n      END IF\n    END DO\n    !!\n    IF( .NOT. convg ) THEN\n      CALL Display( 'No convergence achieved, stopped ' )\n      STOP\n    ELSE\n      CALL obj%WriteData(outfile, \"/\"//tostring(its))\n    END IF\n  END DO\n"})}),"\n",(0,i.jsx)(e.p,{children:'!!! settings "Cleanup"'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-fortran",children:"  CALL outfile%Deallocate()\n  CALL obj%Deallocate()\n  CALL domainForPressure%Deallocate()\n  CALL domainForVelocity%Deallocate()\n  CALL param%Deallocate(); CALL FPL_FINALIZE()\nEND PROGRAM main\n"})})]})}function m(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},91586:(n,e,a)=>{a.d(e,{Z:()=>i});const i=a.p+"assets/images/meshP-4e2458c56c77bb02afcd0e8e6d65c575.png"},59813:(n,e,a)=>{a.d(e,{Z:()=>i});const i=a.p+"assets/images/meshV-4e2458c56c77bb02afcd0e8e6d65c575.png"},11151:(n,e,a)=>{a.d(e,{Z:()=>s,a:()=>o});var i=a(67294);const r={},t=i.createContext(r);function o(n){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);
"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[64821],{75774:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>r});var l=n(85893),t=n(11151);const i={},a="EvalallOrthopol",s={id:"OrthogonalPolynomialUtility/EvalallOrthopol",title:"EvalallOrthopol",description:"Evaluate orthogonal polynomials.",source:"@site/docs/docs-api/OrthogonalPolynomialUtility/EvalallOrthopol.md",sourceDirName:"OrthogonalPolynomialUtility",slug:"/OrthogonalPolynomialUtility/EvalallOrthopol",permalink:"/docs-api/OrthogonalPolynomialUtility/EvalallOrthopol",draft:!1,unlisted:!1,editUrl:"https://github.com/vickysharma0812/vickysharma0812.github.io/tree/main/docs/docs-api/OrthogonalPolynomialUtility/EvalallOrthopol.md",tags:[],version:"current",lastUpdatedAt:1701101849,formattedLastUpdatedAt:"Nov 27, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Clenshaw",permalink:"/docs-api/OrthogonalPolynomialUtility/Clenshaw"},next:{title:"JacobiMatrix",permalink:"/docs-api/OrthogonalPolynomialUtility/JacobiMatrix"}},d={},r=[{value:"Interface",id:"interface",level:2}];function c(e){const o={admonition:"admonition",code:"code",h1:"h1",h2:"h2",input:"input",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(o.h1,{id:"evalallorthopol",children:"EvalallOrthopol"}),"\n",(0,l.jsx)(o.p,{children:"Evaluate orthogonal polynomials."}),"\n",(0,l.jsx)(o.h2,{id:"interface",children:"Interface"}),"\n",(0,l.jsx)(o.pre,{children:(0,l.jsx)(o.code,{className:"language-fortran",children:'INTERFACE\n  MODULE PURE FUNCTION EvalAllOrthopol(n, x, orthopol, alpha, beta, &\n    & lambda) RESULT(ans)\n    INTEGER(I4B), INTENT(IN) :: n\n    !! order of polynomial\n    REAL(DFP), INTENT(IN) :: x(:)\n    !! points of evaluation\n    INTEGER(I4B), INTENT(IN) :: orthopol\n    !! orthogonal polynomial family\n    REAL(DFP), OPTIONAL, INTENT(IN) :: alpha\n    !! alpha1 needed when orthopol1 is "Jacobi"\n    REAL(DFP), OPTIONAL, INTENT(IN) :: beta\n    !! beta1 is needed when orthopol1 is "Jacobi"\n    REAL(DFP), OPTIONAL, INTENT(IN) :: lambda\n    !! lambda1 is needed when orthopol1 is "Ultraspherical"\n    REAL(DFP) :: ans(SIZE(x), n + 1)\n  END FUNCTION EvalAllOrthopol\nEND INTERFACE\n'})}),"\n",(0,l.jsxs)(o.admonition,{type:"note",children:[(0,l.jsx)(o.mdxAdmonitionTitle,{children:(0,l.jsx)(o.code,{children:"n"})}),(0,l.jsx)(o.p,{children:"n denotes the order of polynomial space."})]}),"\n",(0,l.jsxs)(o.admonition,{type:"note",children:[(0,l.jsx)(o.mdxAdmonitionTitle,{children:(0,l.jsx)(o.code,{children:"x"})}),(0,l.jsx)(o.p,{children:"x denotes the 1D points of evaluation."})]}),"\n",(0,l.jsxs)(o.admonition,{type:"note",children:[(0,l.jsx)(o.mdxAdmonitionTitle,{children:(0,l.jsx)(o.code,{children:"orthopol"})}),(0,l.jsx)(o.p,{children:"Currently, we can specify following types of orthogonal polynomials:"}),(0,l.jsxs)(o.ul,{className:"contains-task-list",children:["\n",(0,l.jsxs)(o.li,{className:"task-list-item",children:[(0,l.jsx)(o.input,{type:"checkbox",checked:!0,disabled:!0})," ","Jacobi"]}),"\n",(0,l.jsxs)(o.li,{className:"task-list-item",children:[(0,l.jsx)(o.input,{type:"checkbox",checked:!0,disabled:!0})," ","Ultraspherical"]}),"\n",(0,l.jsxs)(o.li,{className:"task-list-item",children:[(0,l.jsx)(o.input,{type:"checkbox",checked:!0,disabled:!0})," ","Legendre"]}),"\n",(0,l.jsxs)(o.li,{className:"task-list-item",children:[(0,l.jsx)(o.input,{type:"checkbox",checked:!0,disabled:!0})," ","Chebyshev"]}),"\n",(0,l.jsxs)(o.li,{className:"task-list-item",children:[(0,l.jsx)(o.input,{type:"checkbox",checked:!0,disabled:!0})," ","Lobatto"]}),"\n",(0,l.jsxs)(o.li,{className:"task-list-item",children:[(0,l.jsx)(o.input,{type:"checkbox",checked:!0,disabled:!0})," ","UnscaledLobatto"]}),"\n"]})]}),"\n",(0,l.jsxs)(o.admonition,{type:"note",children:[(0,l.jsx)(o.mdxAdmonitionTitle,{children:(0,l.jsx)(o.code,{children:"alpha, beta"})}),(0,l.jsxs)(o.p,{children:["alpha and beta are parameters of Jacobi Polynomials. They should be present when ",(0,l.jsx)(o.code,{children:"orthopol"})," is equal to ",(0,l.jsx)(o.code,{children:"Jacobi"})]})]}),"\n",(0,l.jsxs)(o.admonition,{type:"note",children:[(0,l.jsx)(o.mdxAdmonitionTitle,{children:(0,l.jsx)(o.code,{children:"lambda"})}),(0,l.jsxs)(o.p,{children:[(0,l.jsx)(o.code,{children:"lambda"})," is parameter for Ultraspherical polynomials. They should be present when ",(0,l.jsx)(o.code,{children:"orthopol"})," is equal to the ",(0,l.jsx)(o.code,{children:"Ultraspherical"})]})]}),"\n",(0,l.jsxs)(o.admonition,{type:"note",children:[(0,l.jsx)(o.mdxAdmonitionTitle,{children:(0,l.jsx)(o.code,{children:"ans"})}),(0,l.jsxs)(o.ul,{children:["\n",(0,l.jsxs)(o.li,{children:["The jth col of ",(0,l.jsx)(o.code,{children:"ans"})," denotes the value of jth polynomial at all points."]}),"\n",(0,l.jsxs)(o.li,{children:["The ith row of ",(0,l.jsx)(o.code,{children:"ans"})," denotes the value of all polynomials at ith point."]}),"\n"]})]})]})}function h(e={}){const{wrapper:o}={...(0,t.a)(),...e.components};return o?(0,l.jsx)(o,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},11151:(e,o,n)=>{n.d(o,{Z:()=>s,a:()=>a});var l=n(67294);const t={},i=l.createContext(t);function a(e){const o=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function s(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),l.createElement(i.Provider,{value:o},e.children)}}}]);
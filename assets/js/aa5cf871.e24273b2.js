"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[65160],{67833:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>N,frontMatter:()=>i,metadata:()=>s,toc:()=>a});var r=t(85893),o=t(11151);const i={},c="GetValue",s={id:"DOF/GetValue",title:"GetValue",description:"Get the entries from fortran vector or realvector using DOf object.",source:"@site/docs/docs-api/DOF/GetValue.md",sourceDirName:"DOF",slug:"/DOF/GetValue",permalink:"/docs-api/DOF/GetValue",draft:!1,unlisted:!1,editUrl:"https://github.com/easifem-fortran/easifem-fortran.github.io/tree/main/docs/docs-api/DOF/GetValue.md",tags:[],version:"current",lastUpdatedAt:1701057211,formattedLastUpdatedAt:"Nov 27, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"GetNodeLoc",permalink:"/docs-api/DOF/GetNodeLoc"},next:{title:"Initiate",permalink:"/docs-api/DOF/Initiate"}},d={},a=[{value:"Interface",id:"interface",level:2},{value:"Interface 2",id:"interface-2",level:2},{value:"Interface 3",id:"interface-3",level:2}];function l(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"getvalue",children:"GetValue"}),"\n",(0,r.jsx)(n.p,{children:"Get the entries from fortran vector or realvector using DOf object."}),"\n",(0,r.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE dof_getvalue1(v, val, obj, idof, storageFMT, &\n    & nodenum)\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: v(:)\n    REAL(DFP), INTENT(IN) :: val(:)\n    CLASS(DOF_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: idof(:)\n    INTEGER(I4B), INTENT(IN) :: storageFMT\n    INTEGER(I4B), INTENT(IN) :: nodenum(:)\n  END SUBROUTINE dof_getvalue1\nEND INTERFACE\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["This subroutine extracts the values from ",(0,r.jsx)(n.code,{children:"val"})," corresponding to degrees of freedom specified by ",(0,r.jsx)(n.code,{children:"idof(:)"})," and return it in ",(0,r.jsx)(n.code,{children:"V"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"StorageFMT"})," can be ",(0,r.jsx)(n.code,{children:"Nodes_FMT"})," or ",(0,r.jsx)(n.code,{children:"DOF_FMT"}),", which specifies the storage format of returned vector."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"interface-2",children:"Interface 2"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE SUBROUTINE dof_getvalue2(v, val, obj, idof, force3D)\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: v(:, :)\n    REAL(DFP), INTENT(IN) :: val(:)\n    CLASS(DOF_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: idof(:)\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: force3D\n  END SUBROUTINE dof_getvalue2\nEND INTERFACE\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This subroutine extracts all the values from ",(0,r.jsx)(n.code,{children:"val"})," corresponding to degrees of freedom specified by ",(0,r.jsx)(n.code,{children:"idof(:)"})," and return it in ",(0,r.jsx)(n.code,{children:"V(:,:)"})," values in ",(0,r.jsx)(n.code,{children:"v(:,:)"})," are stored in xiJ format."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Force3D will return a vector in 3D. if there are only two components then it will set the third component to 0."})}),"\n",(0,r.jsx)(n.h2,{id:"interface-3",children:"Interface 3"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-fortran",children:" INTERFACE\n  MODULE PURE SUBROUTINE dof_getvalue3(v, val, obj, idof, storageFMT)\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: v(:)\n    REAL(DFP), INTENT(IN) :: val(:)\n    CLASS(DOF_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: idof(:)\n    INTEGER(I4B), INTENT(IN) :: storageFMT\n  END SUBROUTINE dof_getvalue3\nEND INTERFACE\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This subroutine extracts the values of from ",(0,r.jsx)(n.code,{children:"val"})," corresponding to degrees of freedom specified by ",(0,r.jsx)(n.code,{children:"idof(:)"})," and return it in ",(0,r.jsx)(n.code,{children:"V"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"StorageFMT"})," can be ",(0,r.jsx)(n.code,{children:"Nodes_FMT"})," or ",(0,r.jsx)(n.code,{children:"DOF_FMT"}),", which specifies the storage format of returned vector."]}),"\n"]})]})}function N(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>c});var r=t(67294);const o={},i=r.createContext(o);function c(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);
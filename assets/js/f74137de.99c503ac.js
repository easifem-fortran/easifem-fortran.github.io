"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[29910],{91945:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=t(85893),s=t(11151);const i={},r="Names",o={id:"DOF/Names",title:"Names",description:"This method returns the names all physical variables in the degree of freedom object.",source:"@site/docs/docs-api/DOF/Names.md",sourceDirName:"DOF",slug:"/DOF/Names",permalink:"/docs-api/DOF/Names",draft:!1,unlisted:!1,editUrl:"https://github.com/vickysharma0812/vickysharma0812.github.io/tree/main/docs/docs-api/DOF/Names.md",tags:[],version:"current",lastUpdatedAt:1701103026,formattedLastUpdatedAt:"Nov 27, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"NE",permalink:"/docs-api/DOF/NE"},next:{title:"Set",permalink:"/docs-api/DOF/Set"}},c={},d=[{value:"Interface 1",id:"interface-1",level:2},{value:"Inteface 2",id:"inteface-2",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"names",children:"Names"}),"\n",(0,a.jsx)(n.p,{children:"This method returns the names all physical variables in the degree of freedom object."}),"\n",(0,a.jsx)(n.h2,{id:"interface-1",children:"Interface 1"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE PURE FUNCTION dof_names1(obj) RESULT(ans)\n    CLASS(DOF_), INTENT(IN) :: obj\n    CHARACTER(1), ALLOCATABLE :: ans(:)\n  END FUNCTION dof_names1\nEND INTERFACE\n"})}),"\n",(0,a.jsx)(n.h2,{id:"inteface-2",children:"Inteface 2"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-fortran",children:" INTERFACE\n  MODULE PURE FUNCTION dof_names2(obj, ii) RESULT(ans)\n    CLASS(DOF_), INTENT(IN) :: obj\n    INTEGER(I4B), INTENT(IN) :: ii\n    CHARACTER(1), ALLOCATABLE :: ans\n  END FUNCTION dof_names2\nEND INTERFACE\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This function returns the name of a physical variable.\nThe physical variable is given by its number ",(0,a.jsx)(n.code,{children:"ii"}),".\nIn this way, this function converts the number of physical variable to its name."]})]})}function m(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>r});var a=t(67294);const s={},i=a.createContext(s);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);
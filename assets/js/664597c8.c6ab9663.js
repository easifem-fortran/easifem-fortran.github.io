"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[26689],{50678:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>a});var o=n(85893),s=n(11151);const r={},c="IsVolume",i={id:"ReferenceElement/IsVolume",title:"IsVolume",description:"Returns true if element is a volume element",source:"@site/docs/docs-api/ReferenceElement/IsVolume.md",sourceDirName:"ReferenceElement",slug:"/ReferenceElement/IsVolume",permalink:"/docs-api/ReferenceElement/IsVolume",draft:!1,unlisted:!1,editUrl:"https://github.com/easifem-fortran/easifem-fortran.github.io/tree/main/docs/docs-api/ReferenceElement/IsVolume.md",tags:[],version:"current",lastUpdatedAt:1701057211,formattedLastUpdatedAt:"Nov 27, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IsTriangle",permalink:"/docs-api/ReferenceElement/IsTriangle"},next:{title:"LocalNodeCoord",permalink:"/docs-api/ReferenceElement/LocalNodeCoord"}},l={},a=[];function m(e){const t={code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"isvolume",children:"IsVolume"}),"\n",(0,o.jsx)(t.p,{children:"Returns true if element is a volume element"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-fortran",children:"  MODULE PURE FUNCTION isVolume(ElemType) RESULT(Ans)\n    LOGICAL(LGT) :: Ans\n    INTEGER(I4B), INTENT(IN) :: ElemType\n  END FUNCTION isVolume\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>c});var o=n(67294);const s={},r=o.createContext(s);function c(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);
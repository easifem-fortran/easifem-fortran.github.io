"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[16759],{49494:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>S,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var r=n(85893),t=n(11151);const s={sidebar_position:3},i="SetSTScalarMeshFieldParam",c={id:"STScalarMeshField/SetSTScalarMeshFieldParam",title:"SetSTScalarMeshFieldParam",description:"Set parameters for initiating an instance of STScalarMeshField.",source:"@site/docs/docs-api/STScalarMeshField/SetSTScalarMeshFieldParam.md",sourceDirName:"STScalarMeshField",slug:"/STScalarMeshField/SetSTScalarMeshFieldParam",permalink:"/docs-api/STScalarMeshField/SetSTScalarMeshFieldParam",draft:!1,unlisted:!1,editUrl:"https://github.com/easifem-fortran/easifem-fortran.github.io/tree/main/docs/docs-api/STScalarMeshField/SetSTScalarMeshFieldParam.md",tags:[],version:"current",lastUpdatedAt:1702011327,formattedLastUpdatedAt:"Dec 8, 2023",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Structure",permalink:"/docs-api/STScalarMeshField/STScalarMeshField_"},next:{title:"Add",permalink:"/docs-api/STScalarMeshField/Add"}},d={},l=[{value:"Interface",id:"interface",level:2}];function o(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h1,{id:"setstscalarmeshfieldparam",children:"SetSTScalarMeshFieldParam"}),"\n",(0,r.jsxs)(a.p,{children:["Set parameters for initiating an instance of ",(0,r.jsx)(a.code,{children:"STScalarMeshField"}),"."]}),"\n",(0,r.jsx)("span",{class:"badge badge--secondary",children:" @ConstructorMethods "}),"\n",(0,r.jsx)(a.h2,{id:"interface",children:"Interface"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE SetSTScalarMeshFieldParam(param, name, &\n    & fieldType, varType, engine, defineOn, nns, nnt)\n    TYPE(ParameterList_), INTENT(INOUT) :: param\n    CHARACTER(*), INTENT(IN) :: name\n    INTEGER(I4B), INTENT(IN) :: fieldType\n    INTEGER(I4B), INTENT(IN) :: varType\n    CHARACTER(*), INTENT(IN) :: engine\n    INTEGER(I4B), INTENT(IN) :: defineOn\n    !! Nodal, Quadrature\n    INTEGER(I4B), INTENT(IN) :: nns\n    !! Number of node in space\n    INTEGER(I4B), INTENT(IN) :: nnt\n    !! Number of node in time\n  END SUBROUTINE SetSTScalarMeshFieldParam\nEND INTERFACE\n"})}),"\n",(0,r.jsxs)(a.p,{children:["Read more about the arguments ",(0,r.jsx)(a.a,{href:"/docs-api/AbstractMeshField/AbstractMeshField_",children:"here"}),"."]})]})}function S(e={}){const{wrapper:a}={...(0,t.a)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},11151:(e,a,n)=>{n.d(a,{Z:()=>c,a:()=>i});var r=n(67294);const t={},s=r.createContext(t);function i(e){const a=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:a},e.children)}}}]);
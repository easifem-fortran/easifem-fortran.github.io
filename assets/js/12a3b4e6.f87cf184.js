"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[45521],{39808:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>T,frontMatter:()=>n,metadata:()=>c,toc:()=>a});var r=o(85893),i=o(11151);const n={},l="DirichletBCImportFromToml",c={id:"DirichletBC/DirichletBCImportFromToml",title:"DirichletBCImportFromToml",description:"Import vector of DirichletBCPointer_ from toml file.",source:"@site/docs/docs-api/DirichletBC/DirichletBCImportFromToml.md",sourceDirName:"DirichletBC",slug:"/DirichletBC/DirichletBCImportFromToml",permalink:"/docs-api/DirichletBC/DirichletBCImportFromToml",draft:!1,unlisted:!1,editUrl:"https://github.com/easifem-fortran/easifem-fortran.github.io/tree/main/docs/docs-api/DirichletBC/DirichletBCImportFromToml.md",tags:[],version:"current",lastUpdatedAt:1701182689,formattedLastUpdatedAt:"Nov 28, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Deallocate",permalink:"/docs-api/DirichletBC/Deallocate"},next:{title:"Display",permalink:"/docs-api/DirichletBC/Display"}},m={},a=[{value:"Interface 1",id:"interface-1",level:2},{value:"Interface 2",id:"interface-2",level:2}];function s(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"dirichletbcimportfromtoml",children:"DirichletBCImportFromToml"}),"\n",(0,r.jsxs)(t.p,{children:["Import vector of ",(0,r.jsx)(t.code,{children:"DirichletBCPointer_"})," from toml file."]}),"\n",(0,r.jsx)("span",{class:"badge badge--secondary",children:" @IOMethods "}),"\n",(0,r.jsx)(t.h2,{id:"interface-1",children:"Interface 1"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-fortran",children:"INTERFACE DirichletBCImportFromToml\n  MODULE SUBROUTINE bc_ImportFromToml1(obj, table, dom, tomlName)\n    TYPE(DirichletBCPointer_), INTENT(INOUT) :: obj(:)\n    !! Should be allocated outside\n    TYPE(toml_table), INTENT(INOUT) :: table\n    !! Toml table to returned\n    CLASS(Domain_), TARGET, INTENT(IN) :: dom\n    !! domain\n    CHARACTER(*), INTENT(IN) :: tomlName\n  END SUBROUTINE bc_ImportFromToml1\nEND INTERFACE DirichletBCImportFromToml\n"})}),"\n",(0,r.jsx)(t.h2,{id:"interface-2",children:"Interface 2"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-fortran",children:"INTERFACE DirichletBCImportFromToml\n  MODULE SUBROUTINE bc_ImportFromToml2(obj, dom, tomlName, afile,  &\n    & filename, printToml)\n    TYPE(DirichletBCPointer_), INTENT(INOUT) :: obj(:)\n    CLASS(Domain_), TARGET, INTENT(IN) :: dom\n    CHARACTER(*), INTENT(IN) :: tomlName\n    TYPE(TxtFile_), OPTIONAL, INTENT(INOUT) :: afile\n    CHARACTER(*), OPTIONAL, INTENT(IN) :: filename\n    LOGICAL(LGT), OPTIONAL, INTENT(IN) :: printToml\n  END SUBROUTINE bc_ImportFromToml2\nEND INTERFACE DirichletBCImportFromToml\n"})})]})}function T(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}},11151:(e,t,o)=>{o.d(t,{Z:()=>c,a:()=>l});var r=o(67294);const i={},n=r.createContext(i);function l(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[84304],{19361:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(85893),r=n(11151);const i={},s="SymLargestEigenVal",l={id:"BlockMatrixField/SymLargestEigenVal",title:"SymLargestEigenVal",description:"Largest eigenvalue of symmetric matrix field.",source:"@site/docs/docs-api/BlockMatrixField/SymLargestEigenVal.md",sourceDirName:"BlockMatrixField",slug:"/BlockMatrixField/SymLargestEigenVal",permalink:"/docs-api/BlockMatrixField/SymLargestEigenVal",draft:!1,unlisted:!1,editUrl:"https://github.com/easifem-fortran/easifem-fortran.github.io/tree/main/docs/docs-api/BlockMatrixField/SymLargestEigenVal.md",tags:[],version:"current",lastUpdatedAt:1701057211,formattedLastUpdatedAt:"Nov 27, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Spy",permalink:"/docs-api/BlockMatrixField/Spy"},next:{title:"SymSchurLargestEigenVal",permalink:"/docs-api/BlockMatrixField/SymSchurLargestEigenVal"}},o={},c=[{value:"Interface",id:"interface",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"symlargesteigenval",children:"SymLargestEigenVal"}),"\n",(0,a.jsx)(t.p,{children:"Largest eigenvalue of symmetric matrix field."}),"\n",(0,a.jsx)(t.h2,{id:"interface",children:"Interface"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-fortran",children:'INTERFACE\n  MODULE FUNCTION SymLargestEigenVal(obj, nev, which, NCV, &\n      & maxIter, tol) RESULT(ans)\n    CLASS(BlockMatrixField_), INTENT(INOUT) :: obj\n    !! CSRMatrix, symmetric\n    INTEGER(I4B), INTENT(IN) :: nev\n    !! number of eigenvalues requested\n    CHARACTER(*), OPTIONAL, INTENT(IN) :: which\n    !! `which = "LM"` \u21e8 absolute largest eigenvalue\n    !! `which = "LA"` \u21e8 algebraic largest eigenvalue\n    !! default is "LA"\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: NCV\n    !! Number of Lanczos vectors generated\n    !! It must be greater than 1 and smaller than `size(mat,1)`\n    !! Default is `NCV = MIN(n, MAX(2*nev+1, 20))`\n    INTEGER(I4B), OPTIONAL, INTENT(IN) :: maxIter\n    !! Maximum number of iteration default = `N*10`\n    REAL(DFP), OPTIONAL, INTENT(IN) :: tol\n    !! tolerance, default = 0.0\n    REAL(DFP) :: ans(nev)\n    !! first k, largest eigenvalue\n  END FUNCTION SymLargestEigenVal\nEND INTERFACE\n'})})]})}function m(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>s});var a=n(67294);const r={},i=a.createContext(r);function s(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[73514],{71255:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>c,metadata:()=>i,toc:()=>l});var a=n(85893),r=n(11151);const c={},s="Get",i={id:"UserFunction/Get",title:"Get",description:"Get is generic function which returns the value from UserFunction.",source:"@site/docs/docs-api/UserFunction/Get.md",sourceDirName:"UserFunction",slug:"/UserFunction/Get",permalink:"/docs-api/UserFunction/Get",draft:!1,unlisted:!1,editUrl:"https://github.com/easifem-fortran/easifem-fortran.github.io/tree/main/docs/docs-api/UserFunction/Get.md",tags:[],version:"current",lastUpdatedAt:1702011327,formattedLastUpdatedAt:"Dec 8, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Deallocate",permalink:"/docs-api/UserFunction/Deallocate"},next:{title:"GetArgType",permalink:"/docs-api/UserFunction/GetArgType"}},o={},l=[{value:"Interface (Get scalar value)",id:"interface-get-scalar-value",level:2},{value:"Interface (Get vector value)",id:"interface-get-vector-value",level:2},{value:"Interface (Get matrix value)",id:"interface-get-matrix-value",level:2}];function u(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"get",children:"Get"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"Get"})," is generic function which returns the value from ",(0,a.jsx)(t.code,{children:"UserFunction"}),"."]}),"\n",(0,a.jsx)("span",{class:"badge badge--secondary",children:" @GetMethods "}),"\n",(0,a.jsx)(t.h2,{id:"interface-get-scalar-value",children:"Interface (Get scalar value)"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-fortran",children:"INTERFACE\n  MODULE RECURSIVE SUBROUTINE GetScalarValue(obj, val, args)\n    CLASS(UserFunction_), INTENT(INOUT) :: obj\n    REAL(DFP), INTENT(INOUT) :: val\n    REAL(DFP), OPTIONAL, INTENT(IN) :: args(:)\n  END SUBROUTINE GetScalarValue\nEND INTERFACE\n"})}),"\n",(0,a.jsx)(t.h2,{id:"interface-get-vector-value",children:"Interface (Get vector value)"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-fortran",children:"INTERFACE\n  MODULE RECURSIVE SUBROUTINE GetVectorValue(obj, val, args)\n    CLASS(UserFunction_), INTENT(INOUT) :: obj\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: val(:)\n    REAL(DFP), OPTIONAL, INTENT(IN) :: args(:)\n  END SUBROUTINE GetVectorValue\nEND INTERFACE\n"})}),"\n",(0,a.jsx)(t.h2,{id:"interface-get-matrix-value",children:"Interface (Get matrix value)"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-fortran",children:"INTERFACE\n  MODULE RECURSIVE SUBROUTINE GetMatrixValue(obj, val, args)\n    CLASS(UserFunction_), INTENT(INOUT) :: obj\n    REAL(DFP), ALLOCATABLE, INTENT(INOUT) :: val(:, :)\n    REAL(DFP), OPTIONAL, INTENT(IN) :: args(:)\n  END SUBROUTINE GetMatrixValue\nEND INTERFACE\n"})})]})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>s});var a=n(67294);const r={},c=a.createContext(r);function s(e){const t=a.useContext(c);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(c.Provider,{value:t},e.children)}}}]);
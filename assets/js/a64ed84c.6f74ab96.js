"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[92074],{36817:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var r=i(85893),n=i(11151);const t={},l="Structure",o={id:"AbstractSTDBE/AbstractSTDBE_",title:"Structure",description:"AbstractSTDBE_ class is an abstract class, which is designed for solving the transient Darcy-Brinkman Equation by using the space-time finite element method.",source:"@site/docs/docs-api/AbstractSTDBE/AbstractSTDBE_.md",sourceDirName:"AbstractSTDBE",slug:"/AbstractSTDBE/AbstractSTDBE_",permalink:"/docs-api/AbstractSTDBE/AbstractSTDBE_",draft:!1,unlisted:!1,editUrl:"https://github.com/easifem-fortran/easifem-fortran.github.io/tree/main/docs/docs-api/AbstractSTDBE/AbstractSTDBE_.md",tags:[],version:"current",lastUpdatedAt:1701057211,formattedLastUpdatedAt:"Nov 27, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"AbstractSTDBEInitiate",permalink:"/docs-api/AbstractSTDBE/AbstractSTDBEInitiate"},next:{title:"AddFluidMaterial",permalink:"/docs-api/AbstractSTDBE/AddFluidMaterial"}},c={},d=[{value:"Getting Started",id:"getting-started",level:2},{value:"Structure",id:"structure-1",level:2},{value:"Methods",id:"methods",level:2},{value:"Deferred Methods",id:"deferred-methods",level:3},{value:"Implemented Methods",id:"implemented-methods",level:3},{value:"Submodules",id:"submodules",level:2}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",input:"input",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"structure",children:"Structure"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"AbstractSTDBE_"})," class is an abstract class, which is designed for solving the transient Darcy-Brinkman Equation by using the space-time finite element method."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"AbstractSTDBE_"})," is a child of ",(0,r.jsx)(s.a,{href:"/docs-api/AbstractKernel/AbstractKernel_",children:"AbstractKernel_"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["The concrete class of ",(0,r.jsx)(s.code,{children:"AbstractSTDBE_"})," has the name of ",(0,r.jsx)(s.code,{children:"STDBEXYZ_"})," where ",(0,r.jsx)(s.code,{children:"X,Y,Z"})," are a numbers."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"X"})," denotes the finite element technique used by the kernel."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Equal order interpolation for pressure and velocity with VMS stabilization"}),"\n",(0,r.jsx)(s.li,{children:"Equal order interpolation for pressure and velocity with partial VMS terms"}),"\n",(0,r.jsx)(s.li,{children:"Equal order interpolation for pressure and velocity with SUPG stabilization"}),"\n",(0,r.jsx)(s.li,{children:"Mixed FEM type 1"}),"\n",(0,r.jsx)(s.li,{children:"Mixed FEM type 2"}),"\n",(0,r.jsx)(s.li,{children:"etc."}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"Y"})," denotes how we solve the system of linear equations"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Y=1, for coupled solution of system of linear equations"}),"\n",(0,r.jsx)(s.li,{children:"Y=2, for uncoupled (iterative methods) of system of linear equations"}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"Z"})," denotes the material properties"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Z=1 material properties remains constant in the mesh"}),"\n",(0,r.jsx)(s.li,{children:"Z=2, material properties can change with both space and time in the mesh"}),"\n",(0,r.jsx)(s.li,{children:"Z=3, material properties can only change with time"}),"\n",(0,r.jsx)(s.li,{children:"Z=4, material properties can only change with space"}),"\n",(0,r.jsx)(s.li,{children:"Z=5, material porperties are given by Random field variable"}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,r.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","TODO Add getting started guide for ",(0,r.jsx)(s.a,{href:"/docs-api/AbstractSTDBE/AbstractSTDBE_",children:"AbstractSTDBE_"})," kernel."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"structure-1",children:"Structure"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-fortran",children:"TYPE, ABSTRACT, EXTENDS(AbstractKernel_) :: AbstractSTDBE_\n  LOGICAL(LGT) :: isCommonDomain = .TRUE.\n  INTEGER(I4B) :: stabParamOption = 1\n  REAL(DFP) :: rtoleranceForPressure = 1.0D-6\n  REAL(DFP) :: rtoleranceForVelocity = 1.0D-6\n  REAL(DFP) :: atoleranceForPressure = 1.0D-6\n  REAL(DFP) :: atoleranceForVelocity = 1.0D-6\n  REAL(DFP) :: toleranceForSteadyState = 1.0E-8\n  REAL(DFP) :: pressureError0 = 0.0_DFP\n  REAL(DFP) :: velocityError0 = 0.0_DFP\n  REAL(DFP) :: pressureError = 0.0_DFP\n  REAL(DFP) :: velocityError = 0.0_DFP\n  LOGICAL(LGT) :: ismaterialInterfaces = .FALSE.\n  INTEGER(I4B), ALLOCATABLE :: materialInterfaces(:)\n  TYPE(DomainConnectivity_), ALLOCATABLE :: matIfaceConnectData(:)\n  TYPE(String) :: domainFileForPressure\n  TYPE(String) :: domainFileForVelocity\n  INTEGER(I4B) :: tPorousMaterials = 0\n  INTEGER(I4B) :: tFluidMaterials = 0\n  TYPE(PorousMaterialPointer_), ALLOCATABLE :: porousMaterial(:)\n  TYPE(FluidMaterialPointer_), ALLOCATABLE :: fluidMaterial(:)\n  TYPE(MeshSelection_), ALLOCATABLE :: PorousMaterialToMesh(:)\n  TYPE(MeshSelection_), ALLOCATABLE :: FluidMaterialToMesh(:)\n  TYPE(String) :: baseContinuityForPressure\n  TYPE(String) :: baseInterpolationForPressure\n  TYPE(String) :: quadratureTypeForPressure\n  TYPE(String) :: baseContinuityForVelocity\n  TYPE(String) :: baseInterpolationForVelocity\n  TYPE(String) :: quadratureTypeForVelocity\n  TYPE(DirichletBCPointer_), ALLOCATABLE :: DBCForPressure(:)\n  TYPE(DirichletBCPointer_), ALLOCATABLE :: DBCForVelocity(:)\n  TYPE(NeumannBCPointer_), ALLOCATABLE :: NBCForPressure(:)\n  TYPE(NeumannBCPointer_), ALLOCATABLE :: NBCForVelocity(:)\n  CLASS(Domain_), POINTER :: DomForPressure => NULL()\n  CLASS(Domain_), POINTER :: DomForVelocity => NULL()\n  CLASS(DomainConnectivity_), POINTER :: domConnect => NULL()\n  TYPE(STScalarMeshField_), ALLOCATABLE :: tausups_cell(:)\n  TYPE(STScalarMeshField_), ALLOCATABLE :: nulsic_cell(:)\n  TYPE(STScalarMeshField_), ALLOCATABLE :: hrgn_cell(:)\n  TYPE(STScalarMeshField_), ALLOCATABLE :: hrpgn_cell(:)\n  TYPE(STScalarMeshField_), ALLOCATABLE :: porosity(:)\n  TYPE(STScalarMeshField_), ALLOCATABLE :: dynamicViscosity(:)\n  TYPE(STScalarMeshField_), ALLOCATABLE :: permeability(:)\n  TYPE(STScalarMeshField_), ALLOCATABLE :: massDensity(:)\n  CLASS(BlockNodeField_), POINTER :: rhs => NULL()\n  CLASS(BlockNodeField_), POINTER :: sol => NULL()\n  CLASS(VectorField_), POINTER :: nodeCoord => NULL()\n  CLASS(STVectorField_), POINTER :: stNodeCoord => NULL()\n  CLASS(VectorField_), POINTER :: nodeCoordForPressure => NULL()\n  CLASS(STVectorField_), POINTER :: stNodeCoordForPressure => NULL()\n  CLASS(VectorField_), POINTER :: nodeCoordForVelocity => NULL()\n  CLASS(STVectorField_), POINTER :: stNodeCoordForVelocity => NULL()\n  CLASS(STScalarField_), POINTER :: pressure => NULL()\n  CLASS(STVectorField_), POINTER :: velocity => NULL()\n  CLASS(ScalarField_), POINTER :: pressure0 => NULL()\n  CLASS(VectorField_), POINTER :: velocity0 => NULL()\n  PROCEDURE(STDBE_ComputeStabParam), POINTER, PASS(obj) :: &\n    & ComputeStabParam => NULL()\n"})}),"\n",(0,r.jsx)(s.p,{children:'!!! note "Inheritence"\nFor data inherited from the see [[../AbstractKernel/AbstractKernel_]].'}),"\n",(0,r.jsxs)(s.p,{children:["The meaning of the fields of ",(0,r.jsx)(s.code,{children:"AbstractSTDBE_"})," is given below."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"isCommonDomain"}),", True if the domain is common for pressure and velocity"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"stabParamOption"}),", Stabilization parameter option"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"rtoleranceForPressure"}),", tolerance for pressure"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"rtoleranceForVelocity"}),", tolerance for velocity"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"atoleranceForPressure"}),", tolerance for pressure"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"atoleranceForVelocity"}),", tolerance for velocity"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"toleranceForSteadyState"}),", toleranceForSteadyState"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"pressureError0"}),", initial error for checking convergence in pressure field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"velocityError0"}),", initial error for checking convergence in velocity field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"ressureError"}),", current error for checking convergence in pressure field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"velocityError"}),", current error for checking convergence in velocity field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"ismaterialInterfaces"}),", True if ",(0,r.jsx)(s.code,{children:"materialInterfaces"})," is allocated"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"materialInterfaces"}),", MeshID of PorousFluidInterace"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"matIfaceConnectData"}),", FacetToCellData for each materialInterface mesh The size of ",(0,r.jsx)(s.code,{children:"matIfaceConnectData"})," is same as the size of ",(0,r.jsx)(s.code,{children:"materialInterfaces"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"domainFileForPressure"}),", domain file name for pressure"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"domainFileForVelocity"}),", domain file name for velocity"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"tPorousMaterials"}),", Total number of porous materials"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"tFluidMaterials"}),", Total number of fluid materials"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"porousMaterial"}),", Pointer to porous materials, the size is"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"fluidMaterial"}),", Pointer to the fluid materials"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"porousMaterialToMesh"}),", Map porous media to the mesh subregion. The size of PorousMaterialToMesh is equal to"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"fluidMaterialToMesh"}),", Map porous media to the mesh subregion. The size of FluidMaterialToMesh is equal to tFluidMaterials"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"baseContinuityForPressure"}),", Continuity of basis function for pressure field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"baseInterpolationForPressure"}),", Interpolation of shape function for pressure field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"quadratureTypeForPressure"}),", Quadrature type for pressure field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"baseContinuityForVelocity"}),", Continuity of basis function for velocity field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"baseInterpolationForVelocity"}),", Interpolation of shape function for velocity field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"quadratureTypeForVelocity"}),", Quadrature type for velocity field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"dbcForPressure"}),", Dirichlet boundary condition for pressure"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"dbcForVelocity"}),", Dirichlet boundary condition for velocity Quadrature type for pressure field in time domain"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"nbcForPressure"}),", Neumann boundary condition for pressure"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"nbcForVelocity"}),", Dirichlet boundary condition for velocity"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"domForPressure"}),", Domain for pressure field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"domForVelocity"}),", Domain for velocity field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"domConnect"}),", Domain connectivity"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"tausups_cell"}),", tausups for cell"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"nulsic_cell"}),", nulsic for cell"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"hrgn_cell"}),", hrgn for cell"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"hrpgn_cell"}),", hrpgn for cell"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"porosity"}),", Porosity field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"dynamicViscosity"}),", Dynamic viscosity"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"permeability"}),", Permeability"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"massDensity"}),", mass density"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"rhs"}),", Block vector field for space-time vectors and multi-physics apps"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"sol"}),", Block vector field for space-time vectors and multi-physics apps"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"nodeCoord"}),", Vector field for nodal coordinates for pressure field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"stNodeCoord"}),", Vector field for space-time nodal coordinates for pressure field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"nodeCoordForPressure"}),", Vector field for nodal coordinates for pressure field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"stNodeCoordForPressure"}),", Vector field for space-time nodal coordinates for pressure field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"nodeCoordForVelocity"}),", Vector field for nodal coordinates for velocity"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"stNodeCoordForVelocity"}),", Vector field for space-time nodal coordinates for velocity"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"pressure"}),", Space time nodal values of pressure field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"velocity"}),", Space time nodal values of velocity field"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"pressure0"}),", nodal values of pressure at the starting time"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"velocity0"}),", nodal values of velocity at starting time"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"ComputeStabParam"}),", This procedure pointer solves the problem"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(s.h3,{id:"deferred-methods",children:"Deferred Methods"}),"\n",(0,r.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","isSteadyState, Returns true if the steady state"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","ApplyDirichletBC, Apply dirichlet boundary condition"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"implemented-methods",children:"Implemented Methods"}),"\n",(0,r.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","AddSurrogate, Add surrogate to the module error handler"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","DEALLOCATE Deallocate memory occupied by ",(0,r.jsx)(s.code,{children:"AbstractSTDBE_"})]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Import, Import the kernel"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Export, export the kernel"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Display, display the kernel"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","WriteData_hdf5, Write data in hdf5 format"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","WriteData_vtk, Write data in vtk format"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","AddPorousMaterial"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","AddFluidMaterial"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","AddPressureDirichletBC"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","AddVelocityDirichletBC"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","GetPressureDirichletBCPointer"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","GetVelocityDirichletBCPointer"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","AddPressureNeumannBC"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","AddVelocityNeumannBC"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","GetPressureNeumannBCPointer"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","GetVelocityNeumannBCPointer"]}),"\n",(0,r.jsxs)(s.li,{className:"task-list-item",children:[(0,r.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Set"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"submodules",children:"Submodules"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"AbstractSTDBE_Class@ConstructorMethods.F90"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"AbstractSTDBE_Class@GetMethods.F90"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"AbstractSTDBE_Class@InitiateFieldsMethods.F90"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"AbstractSTDBE_Class@SetMethods.F90"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"AbstractSTDBE_Class@IOMethods.F90"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"AbstractSTDBE_Class@AssembleMethods.F90"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"AbstractSTDBE_Class@AssembleTanmatMethods.F90"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"AbstractSTDBE_Class@AssembleRHSMethods.F90"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"AbstractSTDBE_Class@SolveMethods.F90"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"AbstractSTDBE_Class@UpdateMethods.F90"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"AbstractSTDBE_Class@ConvergenceMethods.F90"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"AbstractSTDBE_Class@BCMethods.F90"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"AbstractSTDBE_Class@ApplyDirichletBCMethods.F90"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"AbstractSTDBE_Class@MaterialMethods.F90"})}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},11151:(e,s,i)=>{i.d(s,{Z:()=>o,a:()=>l});var r=i(67294);const n={},t=r.createContext(n);function l(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);
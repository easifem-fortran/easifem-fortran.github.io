"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[63711],{31620:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=n(85893),t=n(11151);const l={},s=void 0,i={id:"FEVariable/FEVariable_test_21a",title:"FEVariable_test_21a",description:"This example shows the use of subtraction operator for scalar-nodal-variable.",source:"@site/docs/docs-api/FEVariable/FEVariable_test_21a.md",sourceDirName:"FEVariable",slug:"/FEVariable/FEVariable_test_21a",permalink:"/docs-api/FEVariable/FEVariable_test_21a",draft:!1,unlisted:!1,editUrl:"https://github.com/easifem-fortran/easifem-fortran.github.io/tree/main/docs/docs-api/FEVariable/FEVariable_test_21a.md",tags:[],version:"current",lastUpdatedAt:1701057211,formattedLastUpdatedAt:"Nov 27, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Structure",permalink:"/docs-api/FEVariable/FEVariable_"},next:{title:"FEVariable example 21b",permalink:"/docs-api/FEVariable/FEVariable_test_21b"}},o={},c=[];function p(a){const e={code:"code",p:"p",pre:"pre",...(0,t.a)(),...a.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:"This example shows the use of subtraction operator for scalar-nodal-variable."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"PROGRAM main\n  USE easifemBase\n  IMPLICIT NONE\n  TYPE(FEVariable_) :: obj\n"})}),"\n",(0,r.jsx)(e.p,{children:'!!! note "constant-constant"'}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:'  obj = NodalVariable( 1.0_DFP, &\n                      & typeFEVariableScalar,    &\n                      & typeFEVariableConstant ) &\n      - NodalVariable( 1.0_DFP, &\n                      & typeFEVariableScalar,    &\n                      & typeFEVariableConstant )\n  CALL Display(obj, "constant-constant")\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:'  obj = NodalVariable( 1.0_DFP, &\n                      & typeFEVariableScalar,    &\n                      & typeFEVariableConstant ) &\n      - 1.0_DFP \n  CALL Display(obj, "constant-constant")\n'})}),"\n",(0,r.jsx)(e.p,{children:'!!! note "space-constant"'}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:'  call display("=================================")\n  obj = NodalVariable( arange(1.0_DFP, 3.0_DFP), &\n                      & typeFEVariableScalar, &\n                      & typeFEVariableSpace ) &\n      - NodalVariable( 1.0_DFP, &\n                      & typeFEVariableScalar,    &\n                      & typeFEVariableConstant )\n  CALL Display(obj, "space-constant")\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:'  call display("=================================")\n  obj = NodalVariable( arange(1.0_DFP, 3.0_DFP), &\n                      & typeFEVariableScalar, &\n                      & typeFEVariableSpace ) &\n      - 1.0_DFP\n  CALL Display(obj, "space-constant")\n'})}),"\n",(0,r.jsx)(e.p,{children:'!!! note "time-constant"'}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:'  call display("=================================")\n  obj = NodalVariable( arange(1.0_DFP, 3.0_DFP), &\n                      & typeFEVariableScalar, &\n                      & typeFEVariableTime ) &\n      - NodalVariable( 1.0_DFP, &\n                      & typeFEVariableScalar,    &\n                      & typeFEVariableConstant )\n  CALL Display(obj, "time-constant")\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:'  call display("=================================")\n  obj = NodalVariable( arange(1.0_DFP, 3.0_DFP), &\n                      & typeFEVariableScalar, &\n                      & typeFEVariableTime ) &\n      - 1.0_DFP \n  CALL Display(obj, "time-constant")\n'})}),"\n",(0,r.jsx)(e.p,{children:'!!! note "spacetime-constant"'}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:'  call display("=================================")\n  obj = NodalVariable( reshape(arange(1.0_DFP, 6.0_DFP), [3,2]), &\n                      & typeFEVariableScalar, &\n                      & typeFEVariableSpaceTime ) &\n      - NodalVariable( 1.0_DFP, &\n                      & typeFEVariableScalar,    &\n                      & typeFEVariableConstant )\n  CALL Display(obj, "spacetime - constant")\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:'  call display("=================================")\n  obj = NodalVariable( reshape(arange(1.0_DFP, 6.0_DFP), [3,2]), &\n                      & typeFEVariableScalar, &\n                      & typeFEVariableSpaceTime ) &\n      - 1.0_DFP \n  CALL Display(obj, "spacetime - constant")\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-fortran",children:"END PROGRAM main\n"})})]})}function d(a={}){const{wrapper:e}={...(0,t.a)(),...a.components};return e?(0,r.jsx)(e,{...a,children:(0,r.jsx)(p,{...a})}):p(a)}},11151:(a,e,n)=>{n.d(e,{Z:()=>i,a:()=>s});var r=n(67294);const t={},l=r.createContext(t);function s(a){const e=r.useContext(l);return r.useMemo((function(){return"function"==typeof a?a(e):{...e,...a}}),[e,a])}function i(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(t):a.components||t:s(a.components),r.createElement(l.Provider,{value:e},a.children)}}}]);
"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[59515],{81187:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>j,contentTitle:()=>f,default:()=>g,frontMatter:()=>p,metadata:()=>x,toc:()=>u});var i=s(85893),a=s(11151);function r(e){const n={code:"code",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["This example shows how to convert the mesh generated from Gmsh, ",(0,i.jsx)(n.code,{children:"MSHFile_"})," format into the ",(0,i.jsx)(n.code,{children:"HDF5File_"})," format."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:"PROGRAM main\n  USE easifemBase\n  USE easifemClasses\n  IMPLICIT NONE\n  TYPE( MSHFile_ ) :: mshFile\n  TYPE( HDF5File_ ) :: hdf5file\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Initiate an instance of ",(0,i.jsx)(n.code,{children:"MSHFile_"})," which is created by Gmsh"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'CALL mshFile%Initiate( filename="./mesh.msh", STATUS="OLD", ACTION="READ" )\n'})}),"\n",(0,i.jsx)(n.p,{children:"Open the mesh file."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:"CALL mshFile%Open()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Read the mesh information from the file."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:"CALL mshFile%Read()\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Initiate an instance of ",(0,i.jsx)(n.code,{children:"HDF5File_"}),". We will save mesh data in this file."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'CALL hdf5file%Initiate( "./mesh.h5", MODE="NEW" )\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Open the ",(0,i.jsx)(n.code,{children:"HDF5File_"})," file so that we can write mesh data in this file."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:"CALL hdf5file%Open()\n"})}),"\n",(0,i.jsxs)(n.p,{children:["exporting mesh from ",(0,i.jsx)(n.code,{children:"MSHFile"})," file to ",(0,i.jsx)(n.code,{children:"HDF5File"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'CALL mshFile%Export( hdf5=hdf5file, group="" )\n'})}),"\n",(0,i.jsx)(n.p,{children:"Cleaning up"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:"  CALL mshFile%Deallocate()\n  CALL hdf5file%Deallocate()\nEND PROGRAM main\n"})})]})}function t(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}function l(e){const n={code:"code",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["This example shows how to initiate an instance of ",(0,i.jsx)(n.code,{children:"Mesh_"})," by reading data from mesh file, which is in ",(0,i.jsx)(n.code,{children:"HDF5File_"})," format."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\n  USE easifemBase\n  USE easifemClasses\n  IMPLICIT NONE\n  TYPE( Mesh_ ) :: obj\n  TYPE( HDF5File_ ) :: meshfile\n  CHARACTER( LEN = *), PARAMETER :: filename="./mesh.h5"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Initiate and open the mesh file which is in ",(0,i.jsx)(n.code,{children:"HDF5File_"})," format."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'CALL meshfile%Initiate( FileName=filename, MODE="READ" )\n'})}),"\n",(0,i.jsx)(n.p,{children:"Open the mesh file"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:"CALL meshfile%Open()\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Initiate an instance of ",(0,i.jsx)(n.code,{children:"Mesh_"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'CALL obj%Initiate(hdf5=meshfile, group="/surfaceEntities_1" )\n'})}),"\n",(0,i.jsx)(n.p,{children:"Display the content of mesh."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'CALL obj%Display("")\n'})}),"\n",(0,i.jsx)(n.p,{children:"cleaning up."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:"  CALL obj%Deallocate()\n  CALL meshfile%Deallocate()\nEND PROGRAM main\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}function o(e){const n={code:"code",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"This example shows how to initiate an instance of Mesh by reading data from mesh file."}),"\n",(0,i.jsxs)(n.p,{children:["This example is same as the previous example, but in this example we construct ",(0,i.jsx)(n.code,{children:"curveEntities_1"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\n  USE easifemBase\n  USE easifemClasses\n  IMPLICIT NONE\n  TYPE( Mesh_ ) :: obj\n  TYPE( HDF5File_ ) :: meshfile\n\n  CALL meshfile%Initiate( FileName="./mesh.h5", MODE="READ" )\n  CALL meshfile%Open()\n\n  CALL obj%Initiate(hdf5=meshfile, group="/curveEntities_1" )\n  CALL obj%Display("")\n\n  CALL obj%Deallocate()\n  CALL meshfile%Deallocate()\nEND PROGRAM main\n'})})]})}function c(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}function d(e){const n={code:"code",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"This example shows how to create multiple meshes and store them into an array of ."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:'PROGRAM main\n  USE easifemBase\n  USE easifemClasses\n  IMPLICIT NONE\n  TYPE( MeshPointer_ ) :: meshes(2)\n  TYPE( HDF5FilePointer_ ) :: meshfiles(2)\n\n  ! Open multiple mesh files which art in [[HDF5File_]] format.\n  ALLOCATE( HDF5File_::meshfiles(1)%ptr )\n  CALL meshfiles(1)%ptr%Initiate( FileName="./mesh_tri6.h5", MODE="READ" )\n  ALLOCATE( HDF5File_::meshfiles(2)%ptr )\n  CALL meshfiles(2)%ptr%Initiate( FileName="./mesh_tri3.h5", MODE="READ" )\n  CALL meshfiles(1)%ptr%Open()\n  CALL meshfiles(2)%ptr%Open()\n\n  ! Create multiple meshes and store them inside the [[MeshPointer_]]\n  ALLOCATE( Mesh_::meshes(1)%ptr)\n  CALL meshes(1)%ptr%Initiate(hdf5=meshfiles(1)%ptr, &\n    & group="/surfaceEntities_1" )\n\n  ALLOCATE( Mesh_::meshes(2)%ptr)\n  CALL meshes(2)%ptr%Initiate(hdf5=meshfiles(2)%ptr, &\n    & group="/surfaceEntities_1" )\n\n  ! Display the meshes on terminal.\n  CALL meshes(1)%ptr%Display("")\n  CALL meshes(2)%ptr%Display("")\n\n  CALL meshes(1)%ptr%Deallocate()\n  CALL meshes(2)%ptr%Deallocate()\n  CALL meshfiles(1)%ptr%Close()\n  CALL meshfiles(1)%ptr%Deallocate()\n  CALL meshfiles(2)%ptr%Close()\n  CALL meshfiles(2)%ptr%Deallocate()\nEND PROGRAM main\n'})})]})}function m(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}const p={sidebar_position:7},f="Initiate",x={id:"Mesh/Initiate",title:"Initiate",description:"Initiate an instance of Mesh.",source:"@site/docs/docs-api/Mesh/Initiate.md",sourceDirName:"Mesh",slug:"/Mesh/Initiate",permalink:"/docs-api/Mesh/Initiate",draft:!1,unlisted:!1,editUrl:"https://github.com/easifem-fortran/easifem-fortran.github.io/tree/main/docs/docs-api/Mesh/Initiate.md",tags:[],version:"current",lastUpdatedAt:1706190029,formattedLastUpdatedAt:"Jan 25, 2024",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"BoundaryFacetData",permalink:"/docs-api/Mesh/BoundaryFacetData_"},next:{title:"Display",permalink:"/docs-api/Mesh/Display"}},j={},u=[{value:"Examples",id:"examples",level:2},{value:"Converting mesh from gmsh to easifem format",id:"converting-mesh-from-gmsh-to-easifem-format",level:3},{value:"Reading surface mesh in 2D",id:"reading-surface-mesh-in-2d",level:3},{value:"Reading curve mesh in 2D",id:"reading-curve-mesh-in-2d",level:3},{value:"Reading more than one mesh",id:"reading-more-than-one-mesh",level:3}];function L(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.a)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"initiate",children:"Initiate"}),"\n",(0,i.jsx)(n.p,{children:"Initiate an instance of Mesh."}),"\n",(0,i.jsx)(n.h1,{id:"structure",children:"Structure"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-fortran",children:"INTERFACE\n  MODULE SUBROUTINE obj_Initiate(obj, hdf5, group)\n    CLASS(Mesh_), INTENT(INOUT) :: obj\n    !! mesh object\n    TYPE(HDF5File_), INTENT(INOUT) :: hdf5\n    !! Mesh file in hdf5 file format\n    CHARACTER(*), INTENT(IN) :: group\n    !! location in HDF5 file\n  END SUBROUTINE obj_Initiate\nEND INTERFACE\n"})}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"converting-mesh-from-gmsh-to-easifem-format",children:"Converting mesh from gmsh to easifem format"}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Click here to see example"}),(0,i.jsx)("div",{children:(0,i.jsx)(t,{})})]}),"\n",(0,i.jsx)(n.h3,{id:"reading-surface-mesh-in-2d",children:"Reading surface mesh in 2D"}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Examples"}),(0,i.jsx)("div",{children:(0,i.jsx)(h,{})})]}),"\n",(0,i.jsx)(n.h3,{id:"reading-curve-mesh-in-2d",children:"Reading curve mesh in 2D"}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Examples"}),(0,i.jsx)("div",{children:(0,i.jsx)(c,{})})]}),"\n",(0,i.jsx)(n.h3,{id:"reading-more-than-one-mesh",children:"Reading more than one mesh"}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Examples"}),(0,i.jsx)("div",{children:(0,i.jsx)(m,{})})]})]})}function g(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(L,{...e})}):L(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>t});var i=s(67294);const a={},r=i.createContext(a);function t(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);
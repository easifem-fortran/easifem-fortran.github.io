"use strict";(self.webpackChunkeasifem_docs=self.webpackChunkeasifem_docs||[]).push([[49851],{41651:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>n,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=s(85893),i=s(11151);const a={repo:"https://github.com/szaghi/PENF",licenses:["bsd-2","bsd-3","gpl3","mit"],tags:["easifemBase","extpkgs"]},n="PENF",o={id:"install/extpkgs/PENF",title:"PENF",description:"PENF is developed  by Mr. Szaghi. This library tries to exploit code portability for modern (2003+) Fortran projects. It is a pure Fortran library for achieving portable codes for modern Fortran projects. It  provides many number-to-string and vice-versa facilities. Read more",source:"@site/docs/guides/install/extpkgs/PENF.md",sourceDirName:"install/extpkgs",slug:"/install/extpkgs/PENF",permalink:"/guides/install/extpkgs/PENF",draft:!1,unlisted:!1,editUrl:"https://github.com/vickysharma0812/vickysharma0812.github.io/tree/main/docs/guides/install/extpkgs/PENF.md",tags:[{label:"easifemBase",permalink:"/guides/tags/easifem-base"},{label:"extpkgs",permalink:"/guides/tags/extpkgs"}],version:"current",lastUpdatedAt:1701057211,formattedLastUpdatedAt:"Nov 27, 2023",frontMatter:{repo:"https://github.com/szaghi/PENF",licenses:["bsd-2","bsd-3","gpl3","mit"],tags:["easifemBase","extpkgs"]},sidebar:"tutorialSidebar",previous:{title:"OGPF",permalink:"/guides/install/extpkgs/OGPF"},next:{title:"SCOTCH",permalink:"/guides/install/extpkgs/SCOTCH"}},l={},c=[];function p(e){const t={a:"a",h1:"h1",p:"p",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"penf",children:"PENF"}),"\n",(0,r.jsxs)(t.p,{children:["PENF is developed  by ",(0,r.jsx)(t.a,{href:"https://github.com/szaghi",children:"Mr. Szaghi"}),". This library tries to exploit code portability for modern (2003+) Fortran projects. It is a pure Fortran library for achieving portable codes for modern Fortran projects. It  provides many number-to-string and vice-versa facilities. ",(0,r.jsx)(t.a,{href:"https://github.com/szaghi/PENF/tree/master/src",children:"Read more"})]})]})}function d(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>o,a:()=>n});var r=s(67294);const i={},a=r.createContext(i);function n(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);